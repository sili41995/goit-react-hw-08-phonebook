{"version":3,"file":"static/js/988.d6de2845.chunk.js","mappings":"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","sources":["hooks/useDeleteContact.js","hooks/useTargetContact.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/EmptyListMessage/EmptyListMessage.styled.js","components/EmptyListMessage/EmptyListMessage.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/UserProfile/UserProfile.styled.js","components/UserProfile/UserProfile.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toasts } from 'utils';\nimport { pagesPath } from 'constants';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${pagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { pagesPath } from 'constants';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n  align-items: center;\n  border-radius: ${({ theme }) => theme.borderRadius.secondaryBorderRadius}px;\n  border: 0.5px solid;\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n  }\n  & a {\n    padding: ${({ theme }) => theme.spacing(3)};\n    display: flex;\n    gap: ${({ theme }) => theme.primaryGap}px;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.primaryFontColor};\n  }\n`;\n\nexport const Image = styled.img`\n  width: 70px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  align-items: center;\n  & div {\n    flex-basis: calc((100% - ${({ theme }) => theme.primaryGap}*2px) / 3);\n  }\n`;\n\nexport const Person = styled.div``;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.otherFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  color: ${({ theme }) => theme.colors.contactPrimaryTextColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Phone = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: ${({ theme }) => theme.colors.contactSecondaryTextColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport IconButton from 'components/IconButton';\nimport LinkWithQuery from 'components/LinkWithQuery/LinkWithQuery';\nimport { pagesPath, iconBtnType } from 'constants';\nimport { getContactInfo } from 'utils';\nimport { useDeleteContact } from 'hooks';\nimport {\n  Email,\n  Image,\n  Item,\n  Role,\n  Name,\n  Phone,\n  ContactInfo,\n  Person,\n} from './ContactsListItem.styled';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsListItem = ({ contact }) => {\n  const { userAvatar, name, id, role, number, email } = getContactInfo(contact);\n  const isLoading = useSelector(selectIsLoading);\n  const deleteContact = useDeleteContact();\n  const path = `${pagesPath.contactDetailsPath}/${id}/${pagesPath.contactPath}`;\n\n  return (\n    <Item>\n      <LinkWithQuery to={path}>\n        <Image src={userAvatar} alt={name} />\n        <ContactInfo>\n          <Person>\n            <Name>{name}</Name>\n            <Role>{role}</Role>\n          </Person>\n          <Phone>{number}</Phone>\n          <Email>{email}</Email>\n        </ContactInfo>\n      </LinkWithQuery>\n      <IconButton\n        top={0}\n        right={0}\n        position=\"absolute\"\n        disabled={isLoading}\n        btnType={iconBtnType.deleteTransparent}\n        width={44}\n        height={35}\n        onBtnClick={() => {\n          deleteContact(id);\n        }}\n      >\n        <AiOutlineDelete />\n      </IconButton>\n    </Item>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n","import { Message } from './EmptyListMessage.styled';\n\nconst EmptyListMessage = () => <Message>Contact list is empty</Message>;\n\nexport default EmptyListMessage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 650px;\n  flex-shrink: 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport ContactsListItem from 'components/ContactsListItem';\nimport EmptyListMessage from 'components/EmptyListMessage';\nimport { Container, List } from './ContactsList.styled';\nimport { searchParamsKeys } from 'constants';\nimport { filterContactsByName, sortContactsByName } from 'utils';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(searchParamsKeys.FILTER_SP_KEY) ?? '';\n  const sortType = searchParams.get(searchParamsKeys.SORT_SP_KEY) ?? '';\n  const filteredContacts = useMemo(() => {\n    const sortedContacts = sortContactsByName(contacts, sortType);\n    return filterContactsByName(sortedContacts, filter);\n  }, [contacts, filter, sortType]);\n\n  return (\n    <Container>\n      {!!contacts.length ? (\n        <List>\n          {filteredContacts.map((contact) => (\n            <ContactsListItem contact={contact} key={contact.id} />\n          ))}\n        </List>\n      ) : (\n        <EmptyListMessage />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const UserProfileContainer = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.titleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n\nexport const UserData = styled.div`\n  margin-top: ${({ theme }) => theme.spacing(7)};\n  margin-bottom: ${({ theme }) => theme.spacing(16)};\n`;\n\nexport const UserInfo = styled.div``;\n\nexport const FullName = styled.p`\n  margin-top: ${({ theme }) => theme.spacing(2)};\n  margin-bottom: ${({ theme }) => theme.spacing()};\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.subtitleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  &:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing(6)};\n  }\n`;\n\nexport const ContactInfoIconWrap = styled.span`\n  display: flex;\n  align-items: center;\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineCalendar } from 'react-icons/ai';\nimport { HiOutlinePhone } from 'react-icons/hi';\nimport { SlLocationPin } from 'react-icons/sl';\nimport { getUserInfo } from 'utils';\nimport {\n  UserInfo,\n  Email,\n  FullName,\n  Image,\n  Name,\n  ContactInfo,\n  UserData,\n  ContactInfoIconWrap,\n  UserProfileContainer,\n} from './UserProfile.styled';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserProfile = () => {\n  const user = useSelector(selectUser);\n  const {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  } = getUserInfo(user);\n\n  return (\n    <UserProfileContainer>\n      <Name>{name}</Name>\n      <UserData>\n        <Image src={userAvatar} alt=\"user avatar\" />\n        <FullName>{userName}</FullName>\n        <Email>{email}</Email>\n      </UserData>\n      <UserInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <AiOutlineCalendar />\n          </ContactInfoIconWrap>\n          {dateOfBirth}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <HiOutlinePhone />\n          </ContactInfoIconWrap>\n          {phoneNumber}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <SlLocationPin />\n          </ContactInfoIconWrap>\n          {location}\n        </ContactInfo>\n      </UserInfo>\n    </UserProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","import { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport ContactsList from 'components/ContactsList';\nimport UserProfile from 'components/UserProfile';\nimport Loader from 'components/Loader';\nimport { selectIsLoaded } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoaded = useSelector(selectIsLoaded);\n\n  useEffect(() => {\n    const promise = dispatch(fetchContacts());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserProfile />\n      {isLoaded && <ContactsList />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","contactId","setContactId","dispatch","useDispatch","navigate","useNavigate","search","useLocation","path","concat","pagesPath","useEffect","deleteContact","unwrap","then","toasts","catch","id","useParams","contacts","useSelector","selectContacts","length","find","_ref","Item","styled","_templateObject","_taggedTemplateLiteral","theme","borderRadius","secondaryBorderRadius","_ref2","colors","borderColor","_ref3","transitionDurationAndFunc","_ref4","shadows","primaryShadow","_ref5","spacing","_ref6","primaryGap","_ref7","primaryFontColor","Image","_templateObject2","ContactInfo","_templateObject3","_ref8","_ref9","Person","_templateObject4","Name","_templateObject5","_ref10","_ref11","fontSize","otherFontSize","_ref12","fontWeight","secondaryFontWeight","Role","_templateObject6","_ref13","contactPrimaryTextColor","_ref14","primaryFontSize","_ref15","primaryFontWeight","Phone","_templateObject7","_ref16","_ref17","secondaryFontSize","_ref18","Email","_templateObject8","_ref19","contactSecondaryTextColor","_ref20","_ref21","contact","_getContactInfo","getContactInfo","userAvatar","name","role","number","email","isLoading","selectIsLoading","useDeleteContact","_jsxs","children","LinkWithQuery","to","_jsx","src","alt","IconButton","top","right","position","disabled","btnType","iconBtnType","width","height","onBtnClick","AiOutlineDelete","Message","otherFontWeight","Container","List","_searchParams$get","_searchParams$get2","_useSearchParams","useSearchParams","searchParams","filter","get","searchParamsKeys","sortType","filteredContacts","useMemo","sortedContacts","sortContactsByName","filterContactsByName","map","ContactsListItem","EmptyListMessage","UserProfileContainer","titleFontSize","UserData","UserInfo","FullName","subtitleFontSize","secondaryFontColor","ContactInfoIconWrap","_templateObject9","user","selectUser","_getUserInfo","getUserInfo","userName","dateOfBirth","phoneNumber","location","AiOutlineCalendar","HiOutlinePhone","SlLocationPin","isLoaded","selectIsLoaded","promise","fetchContacts","abort","_Fragment","UserProfile","ContactsList","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}