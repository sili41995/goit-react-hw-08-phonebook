{"version":3,"file":"static/js/661.eb64c18f.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/AuthFormMessage/AuthFormMessage.styled.js","components/AuthFormMessage/AuthFormMessage.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 600px;\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.authFormBackgroundColor};\n  padding: ${({ theme }) => theme.padding.paddingAuthForm}px;\n  margin: ${({ theme }) => theme.spacing(10)} auto;\n  border-radius: ${({ theme }) => theme.borderRadius.otherBorderRadius}px;\n  box-shadow: ${({ theme }) => theme.shadows.secondaryShadow};\n`;\n","import { FormContainer } from './AuthForm.styled';\n\nconst AuthForm = ({ children }) => <FormContainer>{children}</FormContainer>;\n\nexport default AuthForm;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  & a {\n    color: ${({ theme }) => theme.colors.primaryLinkColor};\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Message } from './AuthFormMessage.styled';\n\nexport const AuthFormMessage = ({ message, pageLink, action }) => (\n  <Message>\n    <Link to={pageLink}>{action}</Link> {message}\n  </Message>\n);\n\nexport default AuthFormMessage;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.titleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 170px;\n  padding: ${({ theme }) => `${theme.spacing(4)} ${theme.spacing(8)}`};\n  align-self: center;\n  background-color: ${({ theme }) => theme.colors.primaryLinkColor};\n  border-color: transparent;\n  border-radius: ${({ theme }) => theme.borderRadius.primaryBorderRadius}px;\n  color: #fff;\n  text-align: center;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  line-height: 1.5;\n  letter-spacing: 0.64px;\n  transition: background-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.secondaryLinkColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Form, Button, Message, Title } from './RegisterForm.styled';\nimport { toasts } from 'utils';\nimport AuthFormMessage from 'components/AuthFormMessage';\nimport Input from 'components/Input';\nimport { formType, pagesPath } from 'constants';\n// import { registerUser } from 'redux/auth/operations';\n// import { selectIsLoading } from 'redux/auth/selectors';\nimport { authSelectors, authOperations } from 'redux/auth';\n\nconst RegisterForm = () => {\n  const isLoading = useSelector(authSelectors.selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const pageLink = `/${pagesPath.loginPath}`;\n\n  const onSubmit = (data) => {\n    dispatch(authOperations.registerUser(data))\n      .unwrap()\n      .then(() => {\n        toasts.successToast('Hello, my friend!');\n      });\n  };\n\n  return (\n    <>\n      <Title>sign up</Title>\n      <Message>Welcome to Phonebook!</Message>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          settings={{ ...register('name', { required: true }) }}\n          type=\"text\"\n          placeholder=\"Username\"\n          inputType={formType.authForm}\n          autoFocus\n        />\n        {errors.name && toasts.errorToast('Username is required')}\n        <Input\n          settings={{ ...register('email', { required: true }) }}\n          type=\"email\"\n          placeholder=\"Email\"\n          inputType={formType.authForm}\n        />\n        {errors.email && toasts.errorToast('Email is required')}\n        <Input\n          settings={{\n            ...register('password', { required: true, minLength: 7 }),\n          }}\n          type=\"password\"\n          placeholder=\"Password\"\n          inputType={formType.authForm}\n        />\n        {errors.password &&\n          toasts.errorToast(\n            errors.password.type === 'required'\n              ? 'Password is required'\n              : 'Password minimum length is 7 characters'\n          )}\n        <AuthFormMessage\n          action={'Log in'}\n          pageLink={pageLink}\n          message={'if you have an account'}\n        />\n        <Button disabled={isLoading} type=\"submit\">\n          Enlist\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import AuthForm from 'components/AuthForm';\nimport RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => (\n  <AuthForm>\n    <RegisterForm />\n  </AuthForm>\n);\n\nexport default RegisterPage;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryGap","_ref2","colors","authFormBackgroundColor","_ref3","padding","paddingAuthForm","_ref4","spacing","_ref5","borderRadius","otherBorderRadius","_ref6","shadows","secondaryShadow","children","_jsx","Message","primaryFontColor","fontSize","secondaryFontSize","fontWeight","primaryFontWeight","primaryLinkColor","message","pageLink","action","_jsxs","Link","to","Title","titleFontSize","Form","_templateObject2","_templateObject3","_ref7","Button","_templateObject4","_ref8","concat","_ref9","_ref10","primaryBorderRadius","_ref11","primaryFontSize","_ref12","_ref13","transitionDurationAndFunc","_ref14","secondaryLinkColor","isLoading","useSelector","authSelectors","dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","pagesPath","_Fragment","onSubmit","data","authOperations","unwrap","then","toasts","Input","settings","_objectSpread","required","type","placeholder","inputType","formType","autoFocus","name","email","minLength","password","AuthFormMessage","disabled","AuthForm","RegisterForm"],"sourceRoot":""}