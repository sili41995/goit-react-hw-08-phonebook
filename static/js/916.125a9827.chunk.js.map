{"version":3,"file":"static/js/916.125a9827.chunk.js","mappings":"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","sources":["constants/defaultValues.js","hooks/useDeleteContact.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/EmptyListMessage/EmptyListMessage.styled.js","components/EmptyListMessage/EmptyListMessage.jsx","components/ContactsList/ContactsList.styled.js","utils/sortContactsByName.js","utils/filterContactsByName.js","components/ContactsList/ContactsList.jsx","utils/getUserInfo.js","components/UserProfile/UserProfile.styled.js","components/UserProfile/UserProfile.jsx","pages/ContactsPage.jsx","utils/getAvatar.js","utils/getContactInfo.js"],"sourcesContent":["const defaultValues = {\n  dateOfBirth: '21 century',\n  phoneNumber: 'Is absent',\n  location: 'ðŸ’™ðŸ’›Ukraine, Nikopol',\n  role: 'my friend',\n  email: 'sili41995@gmail.com',\n  chat: 'sili4_a',\n  description: 'No description',\n};\n\nexport default defaultValues;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { errorToast, successToast } from 'utils/toasts';\nimport pagesPath from 'constants/pagesPath';\nimport { useEffect, useState } from 'react';\n\nconst useDeleteContact = (path) => {\n  const [contactId, setContactId] = useState(null);\n  const targetId = useParams()[pagesPath.dynamicParam];\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (contactId) {\n      const promise = dispatch(deleteContact(contactId));\n      promise\n        .unwrap()\n        .then(() => {\n          successToast('Contact successfully removed');\n          if (path) {\n            navigate(path);\n          } else if (targetId === contactId) {\n            navigate(`/${pagesPath.contactsPath}`);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path, targetId]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n  align-items: center;\n  border-radius: 10px;\n  border: 0.5px solid rgba(137, 137, 137, 0.43);\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.primaryShadow};\n  }\n  & a {\n    padding: ${({ theme }) => theme.spacing * 3}px;\n    display: flex;\n    gap: ${({ theme }) => theme.primaryGap}px;\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 70px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  align-items: center;\n  & div {\n    flex-basis: calc((100% - ${({ theme }) => theme.primaryGap}*2px) / 3);\n  }\n`;\n\nexport const Person = styled.div``;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  color: #636363;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Phone = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: #696969;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport pagesPath from 'constants/pagesPath';\nimport iconBtnType from 'constants/iconBtnType';\nimport IconButton from 'components/IconButton';\nimport LinkWithQuery from 'components/LinkWithQuery/LinkWithQuery';\nimport getContactInfo from 'utils/getContactInfo';\nimport useDeleteContact from 'hooks/useDeleteContact';\nimport {\n  Email,\n  Image,\n  Item,\n  Role,\n  Name,\n  Phone,\n  ContactInfo,\n  Person,\n} from './ContactsListItem.styled';\n\nconst ContactsListItem = ({ contact }) => {\n  const { userAvatar, name, id, role, number, email } = getContactInfo(contact);\n  const isLoading = useSelector(selectIsLoading);\n  const setContactId = useDeleteContact();\n\n  return (\n    <Item>\n      <LinkWithQuery\n        to={`${pagesPath.contactDetailsPath}/${id}/${pagesPath.contactPath}`}\n      >\n        <Image src={userAvatar} alt={name} />\n        <ContactInfo>\n          <Person>\n            <Name>{name}</Name>\n            <Role>{role}</Role>\n          </Person>\n          <div>\n            <Phone>{number}</Phone>\n          </div>\n          <div>\n            <Email>{email}</Email>\n          </div>\n        </ContactInfo>\n      </LinkWithQuery>\n      <IconButton\n        top={0}\n        right={0}\n        position=\"absolute\"\n        disabled={isLoading}\n        btnType={iconBtnType.deleteTransparent}\n        width={44}\n        height={35}\n        onBtnClick={() => {\n          setContactId(id);\n        }}\n      >\n        <AiOutlineDelete />\n      </IconButton>\n    </Item>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n`;\n","import { Message } from './EmptyListMessage.styled';\n\nconst EmptyListMessage = () => <Message>Contact list is empty</Message>;\n\nexport default EmptyListMessage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 650px;\n  flex-shrink: 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import sortTypes from 'constants/sortTypes';\n\nconst { DESC_SORT_TYPE } = sortTypes;\n\nconst sortContactsByName = (contacts, sortType) =>\n  contacts.toSorted(({ name: prevContact }, { name: nextContact }) =>\n    sortType === DESC_SORT_TYPE\n      ? nextContact.localeCompare(prevContact)\n      : prevContact.localeCompare(nextContact)\n  );\n\nexport default sortContactsByName;\n","const filterContactsByName = (contacts, filter) =>\n  filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : contacts;\n\nexport default filterContactsByName;\n","import { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport ContactsListItem from 'components/ContactsListItem';\nimport EmptyListMessage from 'components/EmptyListMessage';\nimport { Container, List } from './ContactsList.styled';\nimport sortContactsByName from 'utils/sortContactsByName';\nimport filterContactsByName from 'utils/filterContactsByName';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport searchParamsKeys from 'constants/searchParamsKeys';\nimport { useMemo } from 'react';\n\nconst { FILTER_SP_KEY, SORT_SP_KEY } = searchParamsKeys;\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(FILTER_SP_KEY) ?? '';\n  const sortType = searchParams.get(SORT_SP_KEY) ?? '';\n  const filteredContacts = useMemo(() => {\n    const sortedContacts = sortContactsByName(contacts, sortType);\n    return filterContactsByName(sortedContacts, filter);\n  }, [contacts, filter, sortType]);\n  console.log(searchParams);\n\n  return (\n    <Container>\n      {!!contacts.length ? (\n        <List>\n          {filteredContacts.map((contact) => (\n            <ContactsListItem contact={contact} key={contact.id} />\n          ))}\n        </List>\n      ) : (\n        <EmptyListMessage />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import defaultValues from 'constants/defaultValues';\nimport { getUserAvatar } from 'utils/getAvatar';\n\nconst getUserInfo = (user) => {\n  const {\n    name,\n    lastName,\n    email,\n    avatar,\n    dateOfBirth = defaultValues.dateOfBirth,\n    phoneNumber = defaultValues.phoneNumber,\n    location = defaultValues.location,\n  } = user;\n  const userName = lastName ? `${name} ${lastName}` : `${name}`;\n  const userAvatar = getUserAvatar(avatar);\n\n  return {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  };\n};\n\nexport default getUserInfo;\n","import styled from '@emotion/styled';\n\nexport const UserProfileContainer = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor}px;\n  font-family: Jua;\n  font-size: 35px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n`;\n\nexport const UserData = styled.div`\n  margin-top: ${({ theme }) => theme.spacing * 7}px;\n  margin-bottom: ${({ theme }) => theme.spacing * 16}px;\n`;\n\nexport const UserInfo = styled.div``;\n\nexport const FullName = styled.p`\n  margin-top: ${({ theme }) => theme.spacing * 2}px;\n  margin-bottom: ${({ theme }) => theme.spacing}px;\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: 25px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing * 3}px;\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  &:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing * 6}px;\n  }\n`;\n\nexport const ContactInfoIconWrap = styled.span`\n  display: flex;\n  align-items: center;\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineCalendar } from 'react-icons/ai';\nimport { HiOutlinePhone } from 'react-icons/hi';\nimport { SlLocationPin } from 'react-icons/sl';\nimport { selectUser } from 'redux/auth/selectors';\nimport getUserInfo from 'utils/getUserInfo';\nimport {\n  UserInfo,\n  Email,\n  FullName,\n  Image,\n  Name,\n  ContactInfo,\n  UserData,\n  ContactInfoIconWrap,\n  UserProfileContainer,\n} from './UserProfile.styled';\n\nconst UserProfile = () => {\n  const user = useSelector(selectUser);\n  const {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  } = getUserInfo(user);\n\n  return (\n    <UserProfileContainer>\n      <Name>{name}</Name>\n      <UserData>\n        <Image src={userAvatar} alt=\"user avatar\" />\n        <FullName>{userName}</FullName>\n        <Email>{email}</Email>\n      </UserData>\n      <UserInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <AiOutlineCalendar />\n          </ContactInfoIconWrap>\n          {dateOfBirth}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <HiOutlinePhone />\n          </ContactInfoIconWrap>\n          {phoneNumber}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <SlLocationPin />\n          </ContactInfoIconWrap>\n          {location}\n        </ContactInfo>\n      </UserInfo>\n    </UserProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","import { Suspense, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport ContactsList from 'components/ContactsList';\nimport UserProfile from 'components/UserProfile';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const promise = dispatch(fetchContacts());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserProfile />\n      <ContactsList />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import defaulUserAvatar from 'components/default-user-avatar.jpg';\nimport defaultContactAvatar from 'components/default-contact-avatar.jpg';\n\nexport const getUserAvatar = (avatar) => (avatar ? avatar : defaulUserAvatar);\n\nexport const getContactAvatar = (avatar) =>\n  avatar ? avatar : defaultContactAvatar;\n","import defaultValues from 'constants/defaultValues';\nimport { getContactAvatar } from 'utils/getAvatar';\n\nconst getContactInfo = (contact = {}) => {\n  const {\n    id,\n    name,\n    number,\n    avatar,\n    role = defaultValues.role,\n    email = defaultValues.email,\n    chat = defaultValues.chat,\n    description = defaultValues.description,\n  } = contact;\n  const userAvatar = getContactAvatar(avatar);\n\n  return { userAvatar, name, id, role, number, email, chat, description };\n};\n\nexport default getContactInfo;\n"],"names":["dateOfBirth","phoneNumber","location","role","email","chat","description","path","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","targetId","useParams","pagesPath","dispatch","useDispatch","navigate","useNavigate","useEffect","deleteContact","unwrap","then","successToast","concat","catch","error","console","log","errorToast","Item","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","transitionDurationAndFunc","_ref2","primaryShadow","_ref3","spacing","_ref4","primaryGap","Image","_templateObject2","ContactInfo","_templateObject3","_ref5","_ref6","Person","_templateObject4","Name","_templateObject5","_ref7","primaryFontColor","_ref8","secondaryFontWeight","Role","_templateObject6","_ref9","primaryFontSize","_ref10","primaryFontWeight","Phone","_templateObject7","_ref11","_ref12","secondaryFontSize","_ref13","Email","_templateObject8","_ref14","_ref15","contact","_getContactInfo","getContactInfo","userAvatar","name","id","number","isLoading","useSelector","selectIsLoading","useDeleteContact","_jsxs","children","LinkWithQuery","to","_jsx","src","alt","IconButton","top","right","position","disabled","btnType","iconBtnType","width","height","onBtnClick","AiOutlineDelete","Message","otherFontWeight","Container","List","DESC_SORT_TYPE","sortTypes","contacts","sortType","toSorted","prevContact","nextContact","localeCompare","filter","toLowerCase","includes","FILTER_SP_KEY","searchParamsKeys","SORT_SP_KEY","_searchParams$get","_searchParams$get2","selectContacts","_useSearchParams","useSearchParams","searchParams","get","filteredContacts","useMemo","sortedContacts","sortContactsByName","filterContactsByName","length","map","ContactsListItem","EmptyListMessage","user","lastName","avatar","_user$dateOfBirth","defaultValues","_user$phoneNumber","_user$location","userName","getUserAvatar","UserProfileContainer","UserData","UserInfo","FullName","ContactInfoIconWrap","_templateObject9","selectUser","_getUserInfo","getUserInfo","AiOutlineCalendar","HiOutlinePhone","SlLocationPin","promise","fetchContacts","abort","_Fragment","UserProfile","ContactsList","Suspense","fallback","Loader","Outlet","defaulUserAvatar","getContactAvatar","defaultContactAvatar","arguments","undefined","_contact$role","_contact$email","_contact$chat","_contact$description"],"sourceRoot":""}