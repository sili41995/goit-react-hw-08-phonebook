{"version":3,"file":"static/js/207.db083530.chunk.js","mappings":"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","sources":["components/ContactData/ContactData.styled.js","components/ActionLink/ActionLink.styled.js","components/ActionLink/ActionLink.jsx","utils/getPhoneNumber.js","components/ContactData/ContactData.jsx","constants/defaultValues.js","hooks/useTargetContact.js","utils/getAvatar.js","utils/getContactInfo.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing * 10}px;\n`;\n\nexport const InfoDesc = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const InfoData = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from '@emotion/styled';\nimport setButtonColor from 'utils/setButtonColor';\nimport setIconFill from 'utils/setIconFill';\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 35px;\n  padding: ${({ theme }) => theme.spacing}px;\n  background-color: ${setButtonColor};\n  border-radius: 8px;\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.primaryShadow};\n  }\n  & svg {\n    width: 100%;\n    height: 100%;\n    fill: ${setIconFill};\n    stroke: inherit;\n  }\n`;\n","import { Link } from './ActionLink.styled';\nimport makeBlur from 'utils/makeBlur';\n\nconst ActionLink = ({ link, children, btnType }) => {\n  const onBtnClick = (e) => {\n    makeBlur(e.currentTarget);\n  };\n\n  return (\n    <Link btnType={btnType} href={link} onClick={onBtnClick}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ActionLink;\n","const getPhoneNumber = (number = '') =>\n  number\n    .split('')\n    .filter((symbol) => symbol === '+' || symbol !== '-')\n    .join('');\n\nexport default getPhoneNumber;\n","import { HiOutlinePhone } from 'react-icons/hi';\nimport { IoMdMail } from 'react-icons/io';\nimport { RiChat1Line } from 'react-icons/ri';\nimport { InfoDesc, InfoData, Container, Field } from './ContactData.styled';\nimport ActionLink from 'components/ActionLink';\nimport getPhoneNumber from 'utils/getPhoneNumber';\nimport getContactInfo from 'utils/getContactInfo';\nimport useTargetContact from 'hooks/useTargetContact';\nimport iconBtnType from 'constants/iconBtnType';\n\nconst ContactData = () => {\n  const targetContact = useTargetContact();\n\n  const { number, email, chat } = getContactInfo(targetContact);\n  const phoneNumber = getPhoneNumber(number);\n\n  return (\n    <Container>\n      <Field>\n        <div>\n          <InfoDesc>Phone number</InfoDesc>\n          <InfoData>{number}</InfoData>\n        </div>\n        <ActionLink link={`tel:${phoneNumber}`} btnType={iconBtnType.phone}>\n          <HiOutlinePhone />\n        </ActionLink>\n      </Field>\n      <Field>\n        <div>\n          <InfoDesc>Email Address</InfoDesc>\n          <InfoData>{email}</InfoData>\n        </div>\n        <ActionLink link={`mailto:${email}`} btnType={iconBtnType.message}>\n          <IoMdMail />\n        </ActionLink>\n      </Field>\n      <Field>\n        <div>\n          <InfoDesc>Chat</InfoDesc>\n          <InfoData>{chat}</InfoData>\n        </div>\n        <ActionLink\n          link={`tg://resolve?domain=${chat}`}\n          btnType={iconBtnType.chat}\n        >\n          <RiChat1Line />\n        </ActionLink>\n      </Field>\n    </Container>\n  );\n};\n\nexport default ContactData;\n","const defaultValues = {\n  dateOfBirth: '21 century',\n  phoneNumber: 'Is absent',\n  location: 'ðŸ’™ðŸ’›Ukraine, Nikopol',\n  role: 'my friend',\n  email: 'sili41995@gmail.com',\n  chat: 'sili4_a',\n  description: 'No description',\n};\n\nexport default defaultValues;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport pagesPath from 'constants/pagesPath';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import defaulUserAvatar from 'components/default-user-avatar.jpg';\nimport defaultContactAvatar from 'components/default-contact-avatar.jpg';\n\nexport const getUserAvatar = (avatar) => (avatar ? avatar : defaulUserAvatar);\n\nexport const getContactAvatar = (avatar) =>\n  avatar ? avatar : defaultContactAvatar;\n","import defaultValues from 'constants/defaultValues';\nimport { getContactAvatar } from 'utils/getAvatar';\n\nconst getContactInfo = (contact = {}) => {\n  const {\n    id,\n    name,\n    number,\n    avatar,\n    role = defaultValues.role,\n    email = defaultValues.email,\n    chat = defaultValues.chat,\n    description = defaultValues.description,\n  } = contact;\n  const userAvatar = getContactAvatar(avatar);\n\n  return { userAvatar, name, id, role, number, email, chat, description };\n};\n\nexport default getContactInfo;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","InfoDesc","_templateObject2","_ref2","primaryFontSize","_ref3","primaryFontWeight","InfoData","_templateObject3","_ref4","primaryFontColor","_ref5","_ref6","Field","_templateObject4","Link","setButtonColor","transitionDurationAndFunc","primaryShadow","setIconFill","link","children","btnType","_jsx","href","onClick","e","makeBlur","currentTarget","number","arguments","length","undefined","split","filter","symbol","join","targetContact","useTargetContact","_getContactInfo","getContactInfo","email","chat","phoneNumber","getPhoneNumber","_jsxs","ActionLink","concat","iconBtnType","HiOutlinePhone","IoMdMail","RiChat1Line","dateOfBirth","location","role","description","id","useParams","pagesPath","contacts","useSelector","selectContacts","find","getUserAvatar","avatar","defaulUserAvatar","getContactAvatar","defaultContactAvatar","contact","name","_contact$role","defaultValues","_contact$email","_contact$chat","_contact$description","userAvatar"],"sourceRoot":""}