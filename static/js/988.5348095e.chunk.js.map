{"version":3,"file":"static/js/988.5348095e.chunk.js","mappings":"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","sources":["hooks/useDeleteContact.js","hooks/useTargetContact.js","hooks/index.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/EmptyListMessage/EmptyListMessage.styled.js","components/EmptyListMessage/EmptyListMessage.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/UserProfile/UserProfile.styled.js","components/UserProfile/UserProfile.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport utils from 'utils';\nimport constants from 'constants';\n\nconst { toasts } = utils;\nconst { pagesPath } = constants;\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${pagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport constants from 'constants';\n\nconst { pagesPath } = constants;\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import useDeleteContact from 'hooks/useDeleteContact';\nimport useTargetContact from 'hooks/useTargetContact';\n\nconst hooks = {\n  useDeleteContact: useDeleteContact,\n  useTargetContact: useTargetContact,\n};\n\nexport default hooks;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n  align-items: center;\n  border-radius: 10px;\n  border: 0.5px solid rgba(137, 137, 137, 0.43);\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n  }\n  & a {\n    padding: ${({ theme }) => theme.spacing(3)};\n    display: flex;\n    gap: ${({ theme }) => theme.primaryGap}px;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.primaryFontColor};\n  }\n`;\n\nexport const Image = styled.img`\n  width: 70px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  align-items: center;\n  & div {\n    flex-basis: calc((100% - ${({ theme }) => theme.primaryGap}*2px) / 3);\n  }\n`;\n\nexport const Person = styled.div``;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.otherFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  color: #636363;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Phone = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: #696969;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport IconButton from 'components/IconButton';\nimport LinkWithQuery from 'components/LinkWithQuery/LinkWithQuery';\nimport constants from 'constants';\nimport utils from 'utils';\nimport hooks from 'hooks';\nimport {\n  Email,\n  Image,\n  Item,\n  Role,\n  Name,\n  Phone,\n  ContactInfo,\n  Person,\n} from './ContactsListItem.styled';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst { getContactInfo } = utils;\nconst { pagesPath, iconBtnType } = constants;\nconst { useDeleteContact } = hooks;\n\nconst ContactsListItem = ({ contact }) => {\n  const { userAvatar, name, id, role, number, email } = getContactInfo(contact);\n  const isLoading = useSelector(selectIsLoading);\n  const deleteContact = useDeleteContact();\n  const path = `${pagesPath.contactDetailsPath}/${id}/${pagesPath.contactPath}`;\n\n  return (\n    <Item>\n      <LinkWithQuery to={path}>\n        <Image src={userAvatar} alt={name} />\n        <ContactInfo>\n          <Person>\n            <Name>{name}</Name>\n            <Role>{role}</Role>\n          </Person>\n          <Phone>{number}</Phone>\n          <Email>{email}</Email>\n        </ContactInfo>\n      </LinkWithQuery>\n      <IconButton\n        top={0}\n        right={0}\n        position=\"absolute\"\n        disabled={isLoading}\n        btnType={iconBtnType.deleteTransparent}\n        width={44}\n        height={35}\n        onBtnClick={() => {\n          deleteContact(id);\n        }}\n      >\n        <AiOutlineDelete />\n      </IconButton>\n    </Item>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n","import { Message } from './EmptyListMessage.styled';\n\nconst EmptyListMessage = () => <Message>Contact list is empty</Message>;\n\nexport default EmptyListMessage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 650px;\n  flex-shrink: 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport ContactsListItem from 'components/ContactsListItem';\nimport EmptyListMessage from 'components/EmptyListMessage';\nimport { Container, List } from './ContactsList.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport constants from 'constants';\nimport utils from 'utils';\n\nconst { searchParamsKeys } = constants;\nconst { filterContactsByName, sortContactsByName } = utils;\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(searchParamsKeys.FILTER_SP_KEY) ?? '';\n  const sortType = searchParams.get(searchParamsKeys.SORT_SP_KEY) ?? '';\n  const filteredContacts = useMemo(() => {\n    const sortedContacts = sortContactsByName(contacts, sortType);\n    return filterContactsByName(sortedContacts, filter);\n  }, [contacts, filter, sortType]);\n\n  return (\n    <Container>\n      {!!contacts.length ? (\n        <List>\n          {filteredContacts.map((contact) => (\n            <ContactsListItem contact={contact} key={contact.id} />\n          ))}\n        </List>\n      ) : (\n        <EmptyListMessage />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const UserProfileContainer = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: 35px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n\nexport const UserData = styled.div`\n  margin-top: ${({ theme }) => theme.spacing(7)};\n  margin-bottom: ${({ theme }) => theme.spacing(16)};\n`;\n\nexport const UserInfo = styled.div``;\n\nexport const FullName = styled.p`\n  margin-top: ${({ theme }) => theme.spacing(2)};\n  margin-bottom: ${({ theme }) => theme.spacing()};\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: 25px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  &:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing(6)};\n  }\n`;\n\nexport const ContactInfoIconWrap = styled.span`\n  display: flex;\n  align-items: center;\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineCalendar } from 'react-icons/ai';\nimport { HiOutlinePhone } from 'react-icons/hi';\nimport { SlLocationPin } from 'react-icons/sl';\nimport utils from 'utils';\nimport {\n  UserInfo,\n  Email,\n  FullName,\n  Image,\n  Name,\n  ContactInfo,\n  UserData,\n  ContactInfoIconWrap,\n  UserProfileContainer,\n} from './UserProfile.styled';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst { getUserInfo } = utils;\n\nconst UserProfile = () => {\n  const user = useSelector(selectUser);\n  const {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  } = getUserInfo(user);\n\n  return (\n    <UserProfileContainer>\n      <Name>{name}</Name>\n      <UserData>\n        <Image src={userAvatar} alt=\"user avatar\" />\n        <FullName>{userName}</FullName>\n        <Email>{email}</Email>\n      </UserData>\n      <UserInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <AiOutlineCalendar />\n          </ContactInfoIconWrap>\n          {dateOfBirth}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <HiOutlinePhone />\n          </ContactInfoIconWrap>\n          {phoneNumber}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <SlLocationPin />\n          </ContactInfoIconWrap>\n          {location}\n        </ContactInfo>\n      </UserInfo>\n    </UserProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","import { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport ContactsList from 'components/ContactsList';\nimport UserProfile from 'components/UserProfile';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoaded } from 'redux/contacts/selectors';\nimport Loader from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoaded = useSelector(selectIsLoaded);\n\n  useEffect(() => {\n    const promise = dispatch(fetchContacts());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserProfile />\n      {isLoaded && <ContactsList />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["toasts","utils","pagesPath","constants","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","dispatch","useDispatch","navigate","useNavigate","search","useLocation","path","concat","contactsPath","useEffect","deleteContact","unwrap","then","successToast","catch","errorToast","useDeleteContact","useTargetContact","id","useParams","dynamicParam","contacts","useSelector","selectContacts","length","find","_ref","Item","styled","_templateObject","_taggedTemplateLiteral","theme","transitionDurationAndFunc","_ref2","shadows","primaryShadow","_ref3","spacing","_ref4","primaryGap","_ref5","colors","primaryFontColor","Image","_templateObject2","ContactInfo","_templateObject3","_ref6","_ref7","Person","_templateObject4","Name","_templateObject5","_ref8","_ref9","fontSize","otherFontSize","_ref10","fontWeight","secondaryFontWeight","Role","_templateObject6","_ref11","primaryFontSize","_ref12","primaryFontWeight","Phone","_templateObject7","_ref13","_ref14","secondaryFontSize","_ref15","Email","_templateObject8","_ref16","_ref17","getContactInfo","iconBtnType","hooks","contact","_getContactInfo","userAvatar","name","role","number","email","isLoading","selectIsLoading","contactDetailsPath","contactPath","_jsxs","children","LinkWithQuery","to","_jsx","src","alt","IconButton","top","right","position","disabled","btnType","deleteTransparent","width","height","onBtnClick","AiOutlineDelete","Message","otherFontWeight","Container","List","searchParamsKeys","filterContactsByName","sortContactsByName","_searchParams$get","_searchParams$get2","_useSearchParams","useSearchParams","searchParams","filter","get","FILTER_SP_KEY","sortType","SORT_SP_KEY","filteredContacts","useMemo","sortedContacts","map","ContactsListItem","EmptyListMessage","UserProfileContainer","UserData","UserInfo","FullName","secondaryFontColor","ContactInfoIconWrap","_templateObject9","getUserInfo","user","selectUser","_getUserInfo","userName","dateOfBirth","phoneNumber","location","AiOutlineCalendar","HiOutlinePhone","SlLocationPin","isLoaded","selectIsLoaded","promise","fetchContacts","abort","_Fragment","UserProfile","ContactsList","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}