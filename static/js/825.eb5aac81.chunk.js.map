{"version":3,"file":"static/js/825.eb5aac81.chunk.js","mappings":"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","sources":["components/ContactDetails/ContactDetails.styled.js","components/ContactInfo/ContactInfo.styled.js","components/ContactInfo/ContactInfo.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactDetails/ContactDetails.jsx","components/ContactModalForm/ContactModalForm.styled.js","components/ContactModalForm/ContactModalForm.jsx","hooks/useDeleteContact.js","hooks/useTargetContact.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  flex-grow: 1;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  justify-content: flex-end;\n  margin-bottom: ${({ theme }) => theme.spacing(28)};\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 112px;\n  margin: 0 auto ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const ContactTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const ContactName = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n  text-align: center;\n`;\n\nexport const ContactDesc = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Navigation = styled.nav`\n  background-color: ${({ theme }) => theme.colors.lightgreyColor};\n  padding: ${({ theme }) => theme.spacing()};\n  border-radius: ${({ theme }) => theme.borderRadius.navBarBorderRadius}px;\n  margin-top: ${({ theme }) => theme.spacing(20)};\n  margin-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ListItem = styled.li`\n  & a {\n    display: block;\n    padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(5)}`};\n    border-radius: ${({ theme }) => theme.borderRadius.secondaryBorderRadius}px;\n    color: ${({ theme }) => theme.colors.otherFontColor};\n    font-family: Jua;\n    font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n    font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n    text-decoration: none;\n    transition: background-color\n      ${({ theme }) => theme.transitionDurationAndFunc};\n    &.active,\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.otherLinkColor};\n    }\n  }\n`;\n","import { Suspense } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { useTargetContact } from 'hooks';\nimport { getAvatar, getContactInfo } from 'utils';\nimport Loader from 'components/Loader';\nimport {\n  ContactDesc,\n  ContactName,\n  ContactTitle,\n  Image,\n  ListItem,\n  List,\n  Navigation,\n} from './ContactInfo.styled';\nimport pagesPath from 'constants/pagesPath';\n\nconst ContactInfo = () => {\n  const targetContact = useTargetContact();\n\n  const { name, role, avatar } = getContactInfo(targetContact);\n  const userAvatar = getAvatar.getContactAvatar(avatar);\n\n  return (\n    <>\n      <Image src={userAvatar} alt={`${name} photo`} />\n      <ContactTitle>\n        <ContactName>{name}</ContactName>\n        <ContactDesc>{role}</ContactDesc>\n      </ContactTitle>\n      <Navigation>\n        <List>\n          <ListItem>\n            <NavLink to={pagesPath.contactPath}>Contact</NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to={pagesPath.aboutPath}>About</NavLink>\n          </ListItem>\n        </List>\n      </Navigation>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactInfo;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.otherFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(10)};\n  align-self: center;\n`;\n","import { HiPhone } from 'react-icons/hi';\nimport { FaUser } from 'react-icons/fa';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoX } from 'react-icons/go';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Buttons, Form, Title } from './EditForm.styled';\nimport IconButton from 'components/IconButton';\nimport Input from 'components/Input';\nimport { getContactInfo, toasts } from 'utils';\nimport { useTargetContact } from 'hooks';\nimport { pagesPath, iconBtnType } from 'constants';\nimport { updateContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst EditForm = ({ setEditContact }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const id = useParams()[pagesPath.dynamicParam];\n  const targetContact = useTargetContact();\n  const { name, number } = getContactInfo(targetContact);\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  const handleFormSubmit = (data) => {\n    dispatch(updateContact({ data, id }))\n      .unwrap()\n      .then(() => {\n        toasts.successToast('Contact updated successfully');\n      })\n      .catch(() => {\n        toasts.errorToast('Contact update failed');\n      });\n  };\n\n  return (\n    <>\n      <Title>Contact editing</Title>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Input\n          defaultValue={name}\n          settings={{ ...register('name', { required: true }) }}\n          type=\"text\"\n          placeholder=\"Name\"\n          inputWrap\n          fieldIcon={<FaUser />}\n          fieldIconSize={18}\n        />\n        {errors.name && toasts.errorToast('Name is required')}\n        <Input\n          defaultValue={number}\n          settings={{ ...register('number', { required: true }) }}\n          type=\"tel\"\n          placeholder=\"Phone\"\n          inputWrap\n          fieldIcon={<HiPhone />}\n          fieldIconSize={18}\n        />\n        {errors.number && toasts.errorToast('Phone is required')}\n        <Buttons>\n          <IconButton\n            disabled={isLoading}\n            btnType={iconBtnType.accept}\n            width={44}\n            height={35}\n            type=\"submit\"\n          >\n            <GiCheckMark />\n          </IconButton>\n          <IconButton\n            btnType={iconBtnType.cancel}\n            width={44}\n            height={35}\n            onBtnClick={setEditContact}\n          >\n            <GoX />\n          </IconButton>\n        </Buttons>\n      </Form>\n    </>\n  );\n};\n\nexport default EditForm;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { CiEdit } from 'react-icons/ci';\nimport { Container, ButtonContainer } from './ContactDetails.styled';\nimport ContactInfo from 'components/ContactInfo';\nimport EditForm from 'components/EditForm';\nimport ContactModalForm from 'components/ContactModalForm';\nimport IconButton from 'components/IconButton';\nimport { makeBlur } from 'utils';\nimport { iconBtnType, pagesPath } from 'constants';\nimport { useDeleteContact } from 'hooks';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactDetails = () => {\n  const [editContact, setEditContact] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const id = useParams()[pagesPath.dynamicParam];\n  const deleteContact = useDeleteContact();\n\n  const setEditState = () => {\n    setEditContact((editContact) => !editContact);\n  };\n\n  const handleEditBtnClick = (e) => {\n    setEditState();\n    makeBlur(e.currentTarget);\n  };\n\n  return (\n    <>\n      <Container>\n        <ButtonContainer>\n          {!editContact && (\n            <IconButton\n              disabled={isLoading}\n              btnType={iconBtnType.delete}\n              width={44}\n              height={35}\n              onBtnClick={() => {\n                deleteContact(id);\n              }}\n            >\n              <AiOutlineDelete />\n            </IconButton>\n          )}\n          <IconButton\n            btnType={iconBtnType.edit}\n            width={44}\n            height={35}\n            onBtnClick={handleEditBtnClick}\n          >\n            <CiEdit />\n          </IconButton>\n        </ButtonContainer>\n        {editContact ? (\n          <ContactModalForm>\n            <EditForm setEditContact={setEditState} />\n          </ContactModalForm>\n        ) : (\n          <ContactInfo />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactDetails;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { Container } from './ContactModalForm.styled';\n\nconst ContactModalForm = ({ children }) => <Container>{children}</Container>;\n\nexport default ContactModalForm;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toasts } from 'utils';\nimport { pagesPath } from 'constants';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${pagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { pagesPath } from 'constants';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ButtonContainer","_templateObject2","_ref","theme","primaryGap","_ref2","spacing","Image","ContactTitle","ContactName","_templateObject3","_ref3","colors","primaryFontColor","_ref4","fontSize","secondaryFontSize","_ref5","fontWeight","otherFontWeight","ContactDesc","_templateObject4","_ref6","secondaryFontColor","_ref7","primaryFontSize","_ref8","primaryFontWeight","Navigation","_templateObject5","_ref9","lightgreyColor","_ref10","_ref11","borderRadius","navBarBorderRadius","_ref12","_ref13","List","_templateObject6","ListItem","_templateObject7","_ref14","concat","_ref15","secondaryBorderRadius","_ref16","otherFontColor","_ref17","_ref18","_ref19","transitionDurationAndFunc","_ref20","otherLinkColor","targetContact","useTargetContact","_getContactInfo","getContactInfo","name","role","avatar","userAvatar","getAvatar","_jsxs","_Fragment","children","_jsx","src","alt","NavLink","to","pagesPath","Suspense","fallback","Loader","Outlet","Title","otherFontSize","secondaryFontWeight","Form","Buttons","setEditContact","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","id","useParams","number","_useForm","useForm","register","errors","formState","handleSubmit","onSubmit","data","updateContact","unwrap","then","toasts","catch","Input","defaultValue","settings","_objectSpread","required","type","placeholder","inputWrap","fieldIcon","FaUser","fieldIconSize","HiPhone","IconButton","disabled","btnType","iconBtnType","width","height","GiCheckMark","onBtnClick","GoX","_useState","useState","_useState2","_slicedToArray","editContact","deleteContact","useDeleteContact","setEditState","AiOutlineDelete","e","makeBlur","currentTarget","CiEdit","ContactModalForm","EditForm","ContactInfo","contactId","setContactId","navigate","useNavigate","search","useLocation","path","useEffect","contacts","selectContacts","length","find"],"sourceRoot":""}