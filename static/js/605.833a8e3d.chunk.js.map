{"version":3,"file":"static/js/605.833a8e3d.chunk.js","mappings":"gPAKQA,EAAcC,EAAAA,EAAAA,UAgBtB,EAdqB,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QAChBC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBP,IAAeG,EACjCK,EAAI,IAAAC,OAAOb,EAAUc,WAE3B,OAAOH,GACLI,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIL,EAAMM,MAAO,CAAEC,KAAMV,KAEnCN,CAEJ,C","sources":["components/PrivateRoute/PrivateRoute.jsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport constants from 'constants';\nimport { selectIsLoggedIn, selectIsRefreshing } from 'redux/auth/selectors';\n\nconst { pagesPath } = constants;\n\nconst PrivateRoute = ({ element }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const location = useLocation();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n  const path = `/${pagesPath.loginPath}`;\n\n  return shouldRedirect ? (\n    <Navigate to={path} state={{ from: location }} />\n  ) : (\n    element\n  );\n};\n\nexport default PrivateRoute;\n"],"names":["pagesPath","constants","_ref","element","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","location","useLocation","shouldRedirect","path","concat","loginPath","_jsx","Navigate","to","state","from"],"sourceRoot":""}