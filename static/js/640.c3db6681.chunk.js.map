{"version":3,"file":"static/js/640.c3db6681.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 8px;\n  padding: ${({ theme }) => theme.spacing * 2}px\n    ${({ theme }) => theme.spacing * 9}px;\n  font-family: Inter;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  letter-spacing: 0.04em;\n  transition: border-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.primaryColor};\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing * 10}px;\n  align-self: center;\n  & a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding: ${({ theme }) => theme.spacing}px;\n    background: rgba(217, 217, 217, 0.58);\n    border-radius: 8px;\n    border-color: transparent;\n    color: ${({ theme }) => theme.primaryFontColor};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.primaryFontSize}px;\n    font-weight: ${({ theme }) => theme.primaryFontWeight};\n    text-decoration: none;\n    transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n    &:hover,\n    &:focus {\n      box-shadow: ${({ theme }) => theme.primaryShadow};\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { useForm } from 'react-hook-form';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { errorToast, successToast } from 'utils/toasts';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport IconButton from 'components/IconButton';\nimport iconBtnType from 'constants/iconBtnType';\nimport { Buttons, Form, Title, Input } from './AddContactForm.styled';\n\nconst AddContactForm = () => {\n  const [newContact, setNewContact] = useState(null);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setFocus,\n    reset,\n  } = useForm();\n  const location = useLocation();\n  const goBackLink = location.state?.from || '/';\n\n  useEffect(() => {\n    if (newContact) {\n      const promise = dispatch(addContact(newContact));\n      promise\n        .unwrap()\n        .then(() => {\n          successToast('Contact added successfully');\n          reset();\n        })\n        .catch(() => {\n          errorToast('Adding a contact failed');\n        });\n\n      return () => {\n        promise.abort();\n      };\n    }\n  }, [dispatch, newContact, reset]);\n\n  useEffect(() => {\n    setFocus('name');\n  }, [setFocus]);\n\n  return (\n    <>\n      <Title>Add contact</Title>\n      <Form onSubmit={handleSubmit(setNewContact)}>\n        <Input\n          {...register('name', { required: true, minLength: 1 })}\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        {errors.name && errorToast('Name is required')}\n        <Input\n          {...register('number', { required: true })}\n          type=\"tel\"\n          placeholder=\"Phone\"\n        />\n        {errors.number && errorToast('Phone is required')}\n        <Buttons>\n          <IconButton\n            disabled={isLoading}\n            btnType={iconBtnType.accept}\n            width={44}\n            height={35}\n            type=\"submit\"\n          >\n            <GiCheckMark />\n          </IconButton>\n          <Link to={goBackLink}>Cancel</Link>\n        </Buttons>\n      </Form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryFontColor","_ref2","secondaryFontWeight","Form","_templateObject2","_ref3","primaryGap","Input","_templateObject3","_ref4","spacing","_ref5","_ref6","primaryFontWeight","_ref7","secondaryFontSize","_ref8","transitionDurationAndFunc","_ref9","primaryColor","Buttons","_templateObject4","_ref10","_ref11","_ref12","_ref13","primaryFontSize","_ref14","_ref15","_ref16","primaryShadow","_location$state","_useState","useState","_useState2","_slicedToArray","newContact","setNewContact","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","setFocus","reset","goBackLink","useLocation","state","from","useEffect","promise","addContact","unwrap","then","successToast","catch","errorToast","abort","_jsxs","_Fragment","children","_jsx","onSubmit","_objectSpread","required","minLength","type","placeholder","name","number","IconButton","disabled","btnType","iconBtnType","width","height","GiCheckMark","Link","to"],"sourceRoot":""}