{"version":3,"file":"static/js/988.dc805af0.chunk.js","mappings":"qNAOQA,EAAWC,EAAAA,EAAAA,OA8BnB,IA5ByB,SAACC,GACxB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAWC,EAAAA,EAAAA,MAAYC,EAAAA,EAAAA,cACvBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACJT,GACcK,GAASK,EAAAA,EAAAA,IAAcV,IAEpCW,SACAC,MAAK,WACJnB,EAAOoB,aAAa,gCAChBlB,EACFY,EAASZ,GACAO,IAAaF,GACtBO,EAAS,IAADO,OAAKV,EAAAA,EAAAA,cAEjB,IACCW,OAAM,WACLtB,EAAOuB,WAAW,4BACpB,GAEN,GAAG,CAAChB,EAAWK,EAAUE,EAAUZ,EAAMO,IAElCD,CACT,C,oQCjCagB,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6UAKF,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,yBAAyB,IAGvD,SAAAC,GAAQ,OAAAA,EAALF,MAAkBG,aAAa,IAGrC,SAAAC,GAAQ,OAAuB,EAAvBA,EAALJ,MAAkBK,OAAW,IAEpC,SAAAC,GAAQ,OAAAA,EAALN,MAAkBO,UAAU,IAM7BC,EAAQZ,EAAAA,EAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0BAIlBY,EAAcd,EAAAA,EAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,mLAI5B,SAAAc,GAAQ,OAAAA,EAALZ,MAAkBO,UAAU,IAGT,SAAAM,GAAQ,OAAAA,EAALb,MAAkBO,UAAU,IAIjDO,EAASlB,EAAAA,EAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,QAEnBkB,EAAOpB,EAAAA,EAAAA,EAAQqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gHACjB,SAAAoB,GAAQ,OAAAA,EAALlB,MAAkBmB,gBAAgB,IAG/B,SAAAC,GAAQ,OAAAA,EAALpB,MAAkBqB,mBAAmB,IAI5CC,EAAO1B,EAAAA,EAAAA,EAAQ2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,qHAGb,SAAA0B,GAAQ,OAAAA,EAALxB,MAAkByB,eAAe,IAClC,SAAAC,GAAQ,OAAAA,EAAL1B,MAAkB2B,iBAAiB,IAI1CC,EAAQhC,EAAAA,EAAAA,EAAQiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,iHAClB,SAAAgC,GAAQ,OAAAA,EAAL9B,MAAkBmB,gBAAgB,IAEjC,SAAAY,GAAQ,OAAAA,EAAL/B,MAAkBgC,iBAAiB,IACpC,SAAAC,GAAQ,OAAAA,EAALjC,MAAkB2B,iBAAiB,IAI1CO,EAAQtC,EAAAA,EAAAA,EAAQuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,qHAGd,SAAAsC,GAAQ,OAAAA,EAALpC,MAAkBgC,iBAAiB,IACpC,SAAAK,GAAQ,OAAAA,EAALrC,MAAkBqB,mBAAmB,I,UC9CjDiB,EAAmBlE,EAAAA,EAAAA,eA4C3B,EA1CyB,SAAH2B,GAAqB,IAAfwC,EAAOxC,EAAPwC,QAC1BC,EAAsDF,EAAeC,GAA7DE,EAAUD,EAAVC,WAAYC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAAQC,EAAKN,EAALM,MACtCC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBtE,GAAeuE,EAAAA,EAAAA,KAErB,OACEC,EAAAA,EAAAA,MAACxD,EAAI,CAAAyD,SAAA,EACHD,EAAAA,EAAAA,MAACE,EAAAA,EAAa,CACZC,GAAE,GAAA9D,OAAKV,EAAAA,EAAAA,mBAA4B,KAAAU,OAAImD,EAAE,KAAAnD,OAAIV,EAAAA,EAAAA,aAAwBsE,SAAA,EAErEG,EAAAA,EAAAA,KAAC/C,EAAK,CAACgD,IAAKf,EAAYgB,IAAKf,KAC7BS,EAAAA,EAAAA,MAACzC,EAAW,CAAA0C,SAAA,EACVD,EAAAA,EAAAA,MAACrC,EAAM,CAAAsC,SAAA,EACLG,EAAAA,EAAAA,KAACvC,EAAI,CAAAoC,SAAEV,KACPa,EAAAA,EAAAA,KAACjC,EAAI,CAAA8B,SAAER,QAETW,EAAAA,EAAAA,KAAA,OAAAH,UACEG,EAAAA,EAAAA,KAAC3B,EAAK,CAAAwB,SAAEP,OAEVU,EAAAA,EAAAA,KAAA,OAAAH,UACEG,EAAAA,EAAAA,KAACrB,EAAK,CAAAkB,SAAEN,aAIdS,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACTC,IAAK,EACLC,MAAO,EACPC,SAAS,WACTC,SAAUf,EACVgB,QAASC,EAAAA,EAAAA,kBACTC,MAAO,GACPC,OAAQ,GACRC,WAAY,WACVxF,EAAagE,EACf,EAAES,UAEFG,EAAAA,EAAAA,KAACa,EAAAA,IAAe,QAIxB,EC5DaC,EAAUzE,EAAAA,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wFACpB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBmB,gBAAgB,IAEjC,SAAAjB,GAAQ,OAAAA,EAALF,MAAkBgC,iBAAiB,IACpC,SAAA5B,GAAQ,OAAAA,EAALJ,MAAkBsE,eAAe,ICFrD,EAFyB,WAAH,OAASf,EAAAA,EAAAA,KAACc,EAAO,CAAAjB,SAAC,yBAAgC,ECA3DmB,EAAY3E,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8CAKtB0E,EAAO5E,EAAAA,EAAAA,GAASa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,2FAIpB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBO,UAAU,I,UCDhCkE,GAA+BC,EAAAA,EAAAA,cAAhBC,GAAgBD,EAAAA,EAAAA,YAC/BE,GAA6CxG,EAAAA,EAAAA,qBAAvByG,GAAuBzG,EAAAA,EAAAA,mBA2BrD,GAzBqB,WAAO,IAAD0G,EAAAC,EACnBC,GAAWhC,EAAAA,EAAAA,IAAYiC,EAAAA,IAC7BC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiC3G,EAAAA,EAAAA,GAAAyG,EAAA,GAArB,GACbG,EAAwC,QAAlCP,EAAGM,EAAaE,IAAIb,WAAc,IAAAK,EAAAA,EAAI,GAC5CS,EAAwC,QAAhCR,EAAGK,EAAaE,IAAIX,WAAY,IAAAI,EAAAA,EAAI,GAC5CS,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,IAAMC,EAAiBb,GAAmBG,EAAUO,GACpD,OAAOX,GAAqBc,EAAgBL,EAC9C,GAAG,CAACL,EAAUK,EAAQE,IAEtB,OACEhC,EAAAA,EAAAA,KAACgB,EAAS,CAAAnB,SACL4B,EAASW,QACVpC,EAAAA,EAAAA,KAACiB,EAAI,CAAApB,SACFoC,EAAiBI,KAAI,SAACrD,GAAO,OAC5BgB,EAAAA,EAAAA,KAACsC,EAAgB,CAACtD,QAASA,GAAcA,EAAQI,GAAM,OAI3DY,EAAAA,EAAAA,KAACuC,EAAgB,KAIzB,E,iCClCaC,GAAuBnG,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BAIjCU,GAAQZ,EAAAA,EAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,wEAMlBkB,GAAOpB,EAAAA,EAAAA,EAAQe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uFACjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBmB,gBAAgB,IAG/B,SAAAjB,GAAQ,OAAAA,EAALF,MAAkBsE,eAAe,IAGxC0B,GAAWpG,EAAAA,EAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,yDAClB,SAAAM,GAAQ,OAAuB,EAAvBA,EAALJ,MAAkBK,OAAW,IAC7B,SAAAC,GAAQ,OAAuB,GAAvBA,EAALN,MAAkBK,OAAY,IAGvC4F,GAAWrG,EAAAA,EAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,QAErBoG,GAAWtG,EAAAA,EAAAA,EAAQ2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6JAChB,SAAAc,GAAQ,OAAuB,EAAvBA,EAALZ,MAAkBK,OAAW,IAC7B,SAAAQ,GAAQ,OAAAA,EAALb,MAAkBK,OAAO,IACpC,SAAAa,GAAQ,OAAAA,EAALlB,MAAkBmB,gBAAgB,IAG/B,SAAAC,GAAQ,OAAAA,EAALpB,MAAkBsE,eAAe,IAIxCpC,GAAQtC,EAAAA,EAAAA,EAAQiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,qHAGd,SAAA0B,GAAQ,OAAAA,EAALxB,MAAkBgC,iBAAiB,IACpC,SAAAN,GAAQ,OAAAA,EAAL1B,MAAkB2B,iBAAiB,IAI1CjB,GAAcd,EAAAA,EAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,+MAG5B,SAAAgC,GAAQ,OAAuB,EAAvBA,EAAL9B,MAAkBK,OAAW,IAG1B,SAAA0B,GAAQ,OAAAA,EAAL/B,MAAkByB,eAAe,IAClC,SAAAQ,GAAQ,OAAAA,EAALjC,MAAkB2B,iBAAiB,IAElC,SAAAS,GAAQ,OAAuB,EAAvBA,EAALpC,MAAkBK,OAAW,IAIxC8F,GAAsBvG,EAAAA,EAAAA,KAAWwG,IAAAA,GAAAtG,EAAAA,EAAAA,GAAA,yGCvCtCuG,GAAgBjI,EAAAA,EAAAA,YA8CxB,GA5CoB,WAClB,IAAMkI,GAAOtD,EAAAA,EAAAA,IAAYuD,GAAAA,IACzBC,EAQIH,GAAYC,GAPd5D,EAAI8D,EAAJ9D,KACAD,EAAU+D,EAAV/D,WACAgE,EAAQD,EAARC,SACA3D,EAAK0D,EAAL1D,MACA4D,EAAWF,EAAXE,YACAC,EAAWH,EAAXG,YACAC,EAAQJ,EAARI,SAGF,OACEzD,EAAAA,EAAAA,MAAC4C,GAAoB,CAAA3C,SAAA,EACnBG,EAAAA,EAAAA,KAACvC,GAAI,CAAAoC,SAAEV,KACPS,EAAAA,EAAAA,MAAC6C,GAAQ,CAAA5C,SAAA,EACPG,EAAAA,EAAAA,KAAC/C,GAAK,CAACgD,IAAKf,EAAYgB,IAAI,iBAC5BF,EAAAA,EAAAA,KAAC2C,GAAQ,CAAA9C,SAAEqD,KACXlD,EAAAA,EAAAA,KAACrB,GAAK,CAAAkB,SAAEN,QAEVK,EAAAA,EAAAA,MAAC8C,GAAQ,CAAA7C,SAAA,EACPD,EAAAA,EAAAA,MAACzC,GAAW,CAAA0C,SAAA,EACVG,EAAAA,EAAAA,KAAC4C,GAAmB,CAAA/C,UAClBG,EAAAA,EAAAA,KAACsD,EAAAA,IAAiB,MAEnBH,MAEHvD,EAAAA,EAAAA,MAACzC,GAAW,CAAA0C,SAAA,EACVG,EAAAA,EAAAA,KAAC4C,GAAmB,CAAA/C,UAClBG,EAAAA,EAAAA,KAACuD,GAAAA,IAAc,MAEhBH,MAEHxD,EAAAA,EAAAA,MAACzC,GAAW,CAAA0C,SAAA,EACVG,EAAAA,EAAAA,KAAC4C,GAAmB,CAAA/C,UAClBG,EAAAA,EAAAA,KAACwD,GAAAA,IAAa,MAEfH,UAKX,E,sBC9BA,GAvBqB,WACnB,IAAM7H,GAAWC,EAAAA,EAAAA,MACXgI,GAAWhE,EAAAA,EAAAA,IAAYiE,EAAAA,IAU7B,OARA9H,EAAAA,EAAAA,YAAU,WACR,IAAM+H,EAAUnI,GAASoI,EAAAA,GAAAA,OAEzB,OAAO,WACLD,EAAQE,OACV,CACF,GAAG,CAACrI,KAGFoE,EAAAA,EAAAA,MAAAkE,EAAAA,SAAA,CAAAjE,SAAA,EACEG,EAAAA,EAAAA,KAAC+D,GAAW,IACXN,IAAYzD,EAAAA,EAAAA,KAACgE,GAAY,KAC1BhE,EAAAA,EAAAA,KAACiE,EAAAA,SAAQ,CAACC,UAAUlE,EAAAA,EAAAA,KAACmE,GAAAA,EAAM,IAAItE,UAC7BG,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,QAIf,C","sources":["hooks/useDeleteContact.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/EmptyListMessage/EmptyListMessage.styled.js","components/EmptyListMessage/EmptyListMessage.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/UserProfile/UserProfile.styled.js","components/UserProfile/UserProfile.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport utils from 'utils';\nimport pagesPath from 'constants/pagesPath';\nimport { useEffect, useState } from 'react';\n\nconst { toasts } = utils;\n\nconst useDeleteContact = (path) => {\n  const [contactId, setContactId] = useState(null);\n  const targetId = useParams()[pagesPath.dynamicParam];\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (contactId) {\n      const promise = dispatch(deleteContact(contactId));\n      promise\n        .unwrap()\n        .then(() => {\n          toasts.successToast('Contact successfully removed');\n          if (path) {\n            navigate(path);\n          } else if (targetId === contactId) {\n            navigate(`/${pagesPath.contactsPath}`);\n          }\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path, targetId]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n  align-items: center;\n  border-radius: 10px;\n  border: 0.5px solid rgba(137, 137, 137, 0.43);\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.primaryShadow};\n  }\n  & a {\n    padding: ${({ theme }) => theme.spacing * 3}px;\n    display: flex;\n    gap: ${({ theme }) => theme.primaryGap}px;\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 70px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  align-items: center;\n  & div {\n    flex-basis: calc((100% - ${({ theme }) => theme.primaryGap}*2px) / 3);\n  }\n`;\n\nexport const Person = styled.div``;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  color: #636363;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Phone = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: #696969;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport pagesPath from 'constants/pagesPath';\nimport iconBtnType from 'constants/iconBtnType';\nimport IconButton from 'components/IconButton';\nimport LinkWithQuery from 'components/LinkWithQuery/LinkWithQuery';\nimport utils from 'utils';\nimport useDeleteContact from 'hooks/useDeleteContact';\nimport {\n  Email,\n  Image,\n  Item,\n  Role,\n  Name,\n  Phone,\n  ContactInfo,\n  Person,\n} from './ContactsListItem.styled';\n\nconst { getContactInfo } = utils;\n\nconst ContactsListItem = ({ contact }) => {\n  const { userAvatar, name, id, role, number, email } = getContactInfo(contact);\n  const isLoading = useSelector(selectIsLoading);\n  const setContactId = useDeleteContact();\n\n  return (\n    <Item>\n      <LinkWithQuery\n        to={`${pagesPath.contactDetailsPath}/${id}/${pagesPath.contactPath}`}\n      >\n        <Image src={userAvatar} alt={name} />\n        <ContactInfo>\n          <Person>\n            <Name>{name}</Name>\n            <Role>{role}</Role>\n          </Person>\n          <div>\n            <Phone>{number}</Phone>\n          </div>\n          <div>\n            <Email>{email}</Email>\n          </div>\n        </ContactInfo>\n      </LinkWithQuery>\n      <IconButton\n        top={0}\n        right={0}\n        position=\"absolute\"\n        disabled={isLoading}\n        btnType={iconBtnType.deleteTransparent}\n        width={44}\n        height={35}\n        onBtnClick={() => {\n          setContactId(id);\n        }}\n      >\n        <AiOutlineDelete />\n      </IconButton>\n    </Item>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n`;\n","import { Message } from './EmptyListMessage.styled';\n\nconst EmptyListMessage = () => <Message>Contact list is empty</Message>;\n\nexport default EmptyListMessage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 650px;\n  flex-shrink: 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport ContactsListItem from 'components/ContactsListItem';\nimport EmptyListMessage from 'components/EmptyListMessage';\nimport { Container, List } from './ContactsList.styled';\nimport utils from 'utils';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport searchParamsKeys from 'constants/searchParamsKeys';\nimport { useMemo } from 'react';\n\nconst { FILTER_SP_KEY, SORT_SP_KEY } = searchParamsKeys;\nconst { filterContactsByName, sortContactsByName } = utils;\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(FILTER_SP_KEY) ?? '';\n  const sortType = searchParams.get(SORT_SP_KEY) ?? '';\n  const filteredContacts = useMemo(() => {\n    const sortedContacts = sortContactsByName(contacts, sortType);\n    return filterContactsByName(sortedContacts, filter);\n  }, [contacts, filter, sortType]);\n\n  return (\n    <Container>\n      {!!contacts.length ? (\n        <List>\n          {filteredContacts.map((contact) => (\n            <ContactsListItem contact={contact} key={contact.id} />\n          ))}\n        </List>\n      ) : (\n        <EmptyListMessage />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const UserProfileContainer = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: 35px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n`;\n\nexport const UserData = styled.div`\n  margin-top: ${({ theme }) => theme.spacing * 7}px;\n  margin-bottom: ${({ theme }) => theme.spacing * 16}px;\n`;\n\nexport const UserInfo = styled.div``;\n\nexport const FullName = styled.p`\n  margin-top: ${({ theme }) => theme.spacing * 2}px;\n  margin-bottom: ${({ theme }) => theme.spacing}px;\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: 25px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing * 3}px;\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  &:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing * 6}px;\n  }\n`;\n\nexport const ContactInfoIconWrap = styled.span`\n  display: flex;\n  align-items: center;\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { AiOutlineCalendar } from 'react-icons/ai';\nimport { HiOutlinePhone } from 'react-icons/hi';\nimport { SlLocationPin } from 'react-icons/sl';\nimport { selectUser } from 'redux/auth/selectors';\nimport utils from 'utils';\nimport {\n  UserInfo,\n  Email,\n  FullName,\n  Image,\n  Name,\n  ContactInfo,\n  UserData,\n  ContactInfoIconWrap,\n  UserProfileContainer,\n} from './UserProfile.styled';\n\nconst { getUserInfo } = utils;\n\nconst UserProfile = () => {\n  const user = useSelector(selectUser);\n  const {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  } = getUserInfo(user);\n\n  return (\n    <UserProfileContainer>\n      <Name>{name}</Name>\n      <UserData>\n        <Image src={userAvatar} alt=\"user avatar\" />\n        <FullName>{userName}</FullName>\n        <Email>{email}</Email>\n      </UserData>\n      <UserInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <AiOutlineCalendar />\n          </ContactInfoIconWrap>\n          {dateOfBirth}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <HiOutlinePhone />\n          </ContactInfoIconWrap>\n          {phoneNumber}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <SlLocationPin />\n          </ContactInfoIconWrap>\n          {location}\n        </ContactInfo>\n      </UserInfo>\n    </UserProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","import { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport ContactsList from 'components/ContactsList';\nimport UserProfile from 'components/UserProfile';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoaded } from 'redux/contacts/selectors';\nimport Loader from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoaded = useSelector(selectIsLoaded);\n\n  useEffect(() => {\n    const promise = dispatch(fetchContacts());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserProfile />\n      {isLoaded && <ContactsList />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["toasts","utils","path","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","targetId","useParams","pagesPath","dispatch","useDispatch","navigate","useNavigate","useEffect","deleteContact","unwrap","then","successToast","concat","catch","errorToast","Item","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","transitionDurationAndFunc","_ref2","primaryShadow","_ref3","spacing","_ref4","primaryGap","Image","_templateObject2","ContactInfo","_templateObject3","_ref5","_ref6","Person","_templateObject4","Name","_templateObject5","_ref7","primaryFontColor","_ref8","secondaryFontWeight","Role","_templateObject6","_ref9","primaryFontSize","_ref10","primaryFontWeight","Phone","_templateObject7","_ref11","_ref12","secondaryFontSize","_ref13","Email","_templateObject8","_ref14","_ref15","getContactInfo","contact","_getContactInfo","userAvatar","name","id","role","number","email","isLoading","useSelector","selectIsLoading","useDeleteContact","_jsxs","children","LinkWithQuery","to","_jsx","src","alt","IconButton","top","right","position","disabled","btnType","iconBtnType","width","height","onBtnClick","AiOutlineDelete","Message","otherFontWeight","Container","List","FILTER_SP_KEY","searchParamsKeys","SORT_SP_KEY","filterContactsByName","sortContactsByName","_searchParams$get","_searchParams$get2","contacts","selectContacts","_useSearchParams","useSearchParams","searchParams","filter","get","sortType","filteredContacts","useMemo","sortedContacts","length","map","ContactsListItem","EmptyListMessage","UserProfileContainer","UserData","UserInfo","FullName","ContactInfoIconWrap","_templateObject9","getUserInfo","user","selectUser","_getUserInfo","userName","dateOfBirth","phoneNumber","location","AiOutlineCalendar","HiOutlinePhone","SlLocationPin","isLoaded","selectIsLoaded","promise","fetchContacts","abort","_Fragment","UserProfile","ContactsList","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}