{"version":3,"file":"static/js/150.b3fc0d06.chunk.js","mappings":"mNAEaA,E,QAAcC,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FACxB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,gBAAgB,IAEjC,SAAAC,GAAQ,OAAAA,EAALF,MAAkBG,eAAe,IAClC,SAAAC,GAAQ,OAAAA,EAALJ,MAAkBK,iBAAiB,I,oBCUvD,EAZ2B,WACzB,IAAMC,GAAgBC,EAAAA,EAAAA,KAEtB,GAAKD,EAAL,CAIA,IAAQE,GAAgBC,EAAAA,EAAAA,GAAeH,GAA/BE,YAER,OAAOE,EAAAA,EAAAA,KAACf,EAAW,CAAAgB,SAAEH,GAJrB,CAKF,C,qBCJA,IAVsB,CACpBI,YAAa,aACbC,YAAa,YACbC,SAAU,2CACVC,KAAM,YACNC,MAAO,sBACPC,KAAM,UACNT,YAAa,iB,mECMf,IARyB,WACvB,IAAMU,GAAKC,EAAAA,EAAAA,MAAYC,EAAAA,EAAAA,cACjBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAIF,EAASG,OACX,OAAOH,EAASI,MAAK,SAAA1B,GAAK,OAAWA,EAAbmB,KAAkCA,CAAE,GAEhE,C,yNCRaQ,EAAgB,SAACC,GAAM,OAAMA,GAAkBC,CAAgB,EAE/DC,EAAmB,SAACF,GAAM,OACrCA,GAAkBG,CAAqB,C,+CCazC,IAhBuB,SAACC,GACtB,IACEb,EAQEa,EARFb,GACAc,EAOED,EAPFC,KACAC,EAMEF,EANFE,OACAN,EAKEI,EALFJ,OAAMO,EAKJH,EAJFhB,KAAAA,OAAI,IAAAmB,EAAGC,EAAAA,EAAAA,KAAkBD,EAAAE,EAIvBL,EAHFf,MAAAA,OAAK,IAAAoB,EAAGD,EAAAA,EAAAA,MAAmBC,EAAAC,EAGzBN,EAFFd,KAAAA,OAAI,IAAAoB,EAAGF,EAAAA,EAAAA,KAAkBE,EAAAC,EAEvBP,EADFvB,YAAAA,OAAW,IAAA8B,EAAGH,EAAAA,EAAAA,YAAyBG,EAIzC,MAAO,CAAEC,YAFUV,EAAAA,EAAAA,GAAiBF,GAEfK,KAAAA,EAAMd,GAAAA,EAAIH,KAAAA,EAAMkB,OAAAA,EAAQjB,MAAAA,EAAOC,KAAAA,EAAMT,YAAAA,EAC5D,C","sources":["components/ContactDescription/ContactDescription.styled.js","components/ContactDescription/ContactDescription.jsx","constants/defaultValues.js","hooks/useTargetContact.js","utils/getAvatar.js","utils/getContactInfo.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Description = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n","import useTargetContact from 'hooks/useTargetContact';\nimport { Description } from './ContactDescription.styled';\nimport getContactInfo from 'utils/getContactInfo';\n\nconst ContactDescription = () => {\n  const targetContact = useTargetContact();\n\n  if (!targetContact) {\n    return;\n  }\n\n  const { description } = getContactInfo(targetContact);\n\n  return <Description>{description}</Description>;\n};\n\nexport default ContactDescription;\n","const defaultValues = {\n  dateOfBirth: '21 century',\n  phoneNumber: 'Is absent',\n  location: 'ðŸ’™ðŸ’›Ukraine, Nikopol',\n  role: 'my friend',\n  email: 'sili41995@gmail.com',\n  chat: 'sili4_a',\n  description: 'No description',\n};\n\nexport default defaultValues;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport pagesPath from 'constants/pagesPath';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import defaulUserAvatar from 'components/default-user-avatar.jpg';\nimport defaultContactAvatar from 'components/default-contact-avatar.jpg';\n\nexport const getUserAvatar = (avatar) => (avatar ? avatar : defaulUserAvatar);\n\nexport const getContactAvatar = (avatar) =>\n  avatar ? avatar : defaultContactAvatar;\n","import defaultValues from 'constants/defaultValues';\nimport { getContactAvatar } from 'utils/getAvatar';\n\nconst getContactInfo = (contact) => {\n  const {\n    id,\n    name,\n    number,\n    avatar,\n    role = defaultValues.role,\n    email = defaultValues.email,\n    chat = defaultValues.chat,\n    description = defaultValues.description,\n  } = contact;\n  const userAvatar = getContactAvatar(avatar);\n\n  return { userAvatar, name, id, role, number, email, chat, description };\n};\n\nexport default getContactInfo;\n"],"names":["Description","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryFontColor","_ref2","primaryFontSize","_ref3","primaryFontWeight","targetContact","useTargetContact","description","getContactInfo","_jsx","children","dateOfBirth","phoneNumber","location","role","email","chat","id","useParams","pagesPath","contacts","useSelector","selectContacts","length","find","getUserAvatar","avatar","defaulUserAvatar","getContactAvatar","defaultContactAvatar","contact","name","number","_contact$role","defaultValues","_contact$email","_contact$chat","_contact$description","userAvatar"],"sourceRoot":""}