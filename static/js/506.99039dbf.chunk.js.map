{"version":3,"file":"static/js/506.99039dbf.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/AuthFormMessage/AuthFormMessage.styled.js","components/AuthFormMessage/AuthFormMessage.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 600px;\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.authFormBackgroundColor};\n  padding: ${({ theme }) => theme.padding.paddingAuthForm}px;\n  margin: ${({ theme }) => theme.spacing(10)} auto;\n  border-radius: ${({ theme }) => theme.borderRadius.otherBorderRadius}px;\n  box-shadow: ${({ theme }) => theme.shadows.secondaryShadow};\n`;\n","import { FormContainer } from './AuthForm.styled';\n\nconst AuthForm = ({ children }) => <FormContainer>{children}</FormContainer>;\n\nexport default AuthForm;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  & a {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Message } from './AuthFormMessage.styled';\n\nexport const AuthFormMessage = ({ message, pageLink, action }) => (\n  <Message>\n    <Link to={pageLink}>{action}</Link> {message}\n  </Message>\n);\n\nexport default AuthFormMessage;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.titleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  align-self: center;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 170px;\n  padding: ${({ theme }) => `${theme.spacing(4)} ${theme.spacing(8)}`};\n  align-self: center;\n  background-color: ${({ theme }) => theme.colors.primaryColor};\n  border-color: transparent;\n  border-radius: ${({ theme }) => theme.borderRadius.primaryBorderRadius}px;\n  color: ${({ theme }) => theme.colors.whiteColor};\n  text-align: center;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize} px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  line-height: 1.5;\n  letter-spacing: 0.64px;\n  transition: background-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n  }\n`;\n","import {\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n  AiOutlineLock,\n  AiOutlineMail,\n} from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Form, Button, Message, Title, Image } from './LoginForm.styled';\nimport defaultAvatar from '../default-signin-avatar.png';\nimport { toasts } from 'utils';\nimport AuthFormMessage from 'components/AuthFormMessage';\nimport Input from 'components/Input';\nimport { pagesPath, formType, iconBtnType } from 'constants';\nimport { authSelectors, authOperations } from 'redux/auth';\n\nconst LoginForm = () => {\n  const [credentials, setCredentials] = useState(null);\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const isLoading = useSelector(authSelectors.selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const pageLink = `/${pagesPath.registerPath}`;\n\n  const toggleIsShowPassword = () => {\n    setIsShowPassword((prevState) => !prevState);\n  };\n\n  useEffect(() => {\n    if (credentials) {\n      const promise = dispatch(authOperations.loginUser(credentials));\n      promise.unwrap().then(() => {\n        toasts.successToast('Hello, my friend!');\n      });\n\n      return () => {\n        promise.abort();\n      };\n    }\n  }, [credentials, dispatch]);\n\n  return (\n    <>\n      <Title>log in</Title>\n      <Message>Welcome to Phonebook!</Message>\n      <Image src={defaultAvatar} alt=\"user avatar\" />\n      <Form onSubmit={handleSubmit(setCredentials)}>\n        <Input\n          settings={{ ...register('email', { required: true }) }}\n          type=\"email\"\n          placeholder=\"Email\"\n          inputType={formType.authForm}\n          autoFocus\n          inputWrap\n          fieldIcon={<AiOutlineMail />}\n          fieldIconSize={20}\n        />\n        {errors.email && toasts.errorToast('Email is required')}\n        <Input\n          settings={{\n            ...register('password', { required: true, minLength: 7 }),\n          }}\n          type={isShowPassword ? 'text' : 'password'}\n          placeholder=\"Password\"\n          inputType={formType.authForm}\n          inputWrap\n          children={\n            isShowPassword ? <AiOutlineEyeInvisible /> : <AiOutlineEye />\n          }\n          btnType={iconBtnType.toggleShowPassword}\n          action={toggleIsShowPassword}\n          fieldIcon={<AiOutlineLock />}\n          fieldIconSize={20}\n        />\n        {errors.password &&\n          toasts.errorToast(\n            errors.password.type === 'required'\n              ? 'Password is required'\n              : 'Password minimum length is 7 characters'\n          )}\n        <AuthFormMessage\n          action={'Sign up'}\n          pageLink={pageLink}\n          message={\"if you don't have an account yet\"}\n        />\n        <Button disabled={isLoading} type=\"submit\">\n          Log in\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import AuthForm from 'components/AuthForm';\nimport LoginForm from 'components/LoginForm';\n\nconst LoginPage = ({ message }) => (\n  <AuthForm>\n    <LoginForm />\n  </AuthForm>\n);\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryGap","_ref2","colors","authFormBackgroundColor","_ref3","padding","paddingAuthForm","_ref4","spacing","_ref5","borderRadius","otherBorderRadius","_ref6","shadows","secondaryShadow","children","_jsx","Message","primaryFontColor","fontSize","secondaryFontSize","fontWeight","primaryFontWeight","primaryColor","message","pageLink","action","_jsxs","Link","to","Title","titleFontSize","_templateObject2","Form","_templateObject3","_ref7","Image","_templateObject4","Button","_templateObject5","_ref8","concat","_ref9","_ref10","primaryBorderRadius","_ref11","whiteColor","_ref12","primaryFontSize","_ref13","_ref14","transitionDurationAndFunc","_ref15","secondaryColor","_useState","useState","_useState2","_slicedToArray","credentials","setCredentials","_useState3","_useState4","isShowPassword","setIsShowPassword","isLoading","useSelector","authSelectors","dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","pagesPath","useEffect","promise","authOperations","unwrap","then","toasts","abort","_Fragment","src","defaultAvatar","alt","onSubmit","Input","settings","_objectSpread","required","type","placeholder","inputType","formType","autoFocus","inputWrap","fieldIcon","AiOutlineMail","fieldIconSize","email","minLength","AiOutlineEyeInvisible","AiOutlineEye","btnType","iconBtnType","prevState","AiOutlineLock","password","AuthFormMessage","disabled","AuthForm","LoginForm"],"sourceRoot":""}