{"version":3,"file":"static/js/46.12ddc219.chunk.js","mappings":"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","sources":["components/ContactData/ContactData.styled.js","components/ActionLink/ActionLink.styled.js","components/ActionLink/ActionLink.jsx","components/ContactData/ContactData.jsx","hooks/useTargetContact.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing * 10}px;\n`;\n\nexport const InfoDesc = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const InfoData = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from '@emotion/styled';\nimport utils from 'utils';\n\nconst { setButtonColor, setIconFill } = utils;\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 35px;\n  padding: ${({ theme }) => theme.spacing}px;\n  background-color: ${setButtonColor};\n  border-radius: 8px;\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.primaryShadow};\n  }\n  & svg {\n    width: 100%;\n    height: 100%;\n    fill: ${setIconFill};\n    stroke: inherit;\n  }\n`;\n","import { Link } from './ActionLink.styled';\nimport utils from 'utils';\n\nconst { makeBlur } = utils;\n\nconst ActionLink = ({ link, children, btnType }) => {\n  const onBtnClick = (e) => {\n    makeBlur(e.currentTarget);\n  };\n\n  return (\n    <Link btnType={btnType} href={link} onClick={onBtnClick}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ActionLink;\n","import { HiOutlinePhone } from 'react-icons/hi';\nimport { IoMdMail } from 'react-icons/io';\nimport { RiChat1Line } from 'react-icons/ri';\nimport { InfoDesc, InfoData, Container, Field } from './ContactData.styled';\nimport ActionLink from 'components/ActionLink';\nimport utils from 'utils';\nimport useTargetContact from 'hooks/useTargetContact';\nimport iconBtnType from 'constants/iconBtnType';\n\nconst { getContactInfo, getPhoneNumber } = utils;\n\nconst ContactData = () => {\n  const targetContact = useTargetContact();\n\n  const { number, email, chat } = getContactInfo(targetContact);\n  const phoneNumber = getPhoneNumber(number);\n\n  return (\n    <Container>\n      <Field>\n        <div>\n          <InfoDesc>Phone number</InfoDesc>\n          <InfoData>{number}</InfoData>\n        </div>\n        <ActionLink link={`tel:${phoneNumber}`} btnType={iconBtnType.phone}>\n          <HiOutlinePhone />\n        </ActionLink>\n      </Field>\n      <Field>\n        <div>\n          <InfoDesc>Email Address</InfoDesc>\n          <InfoData>{email}</InfoData>\n        </div>\n        <ActionLink link={`mailto:${email}`} btnType={iconBtnType.message}>\n          <IoMdMail />\n        </ActionLink>\n      </Field>\n      <Field>\n        <div>\n          <InfoDesc>Chat</InfoDesc>\n          <InfoData>{chat}</InfoData>\n        </div>\n        <ActionLink\n          link={`tg://resolve?domain=${chat}`}\n          btnType={iconBtnType.chat}\n        >\n          <RiChat1Line />\n        </ActionLink>\n      </Field>\n    </Container>\n  );\n};\n\nexport default ContactData;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport pagesPath from 'constants/pagesPath';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","InfoDesc","_templateObject2","_ref2","primaryFontSize","_ref3","primaryFontWeight","InfoData","_templateObject3","_ref4","primaryFontColor","_ref5","_ref6","Field","_templateObject4","setButtonColor","utils","setIconFill","Link","transitionDurationAndFunc","primaryShadow","makeBlur","link","children","btnType","_jsx","href","onClick","e","currentTarget","getContactInfo","getPhoneNumber","targetContact","useTargetContact","_getContactInfo","number","email","chat","phoneNumber","_jsxs","ActionLink","concat","iconBtnType","HiOutlinePhone","IoMdMail","RiChat1Line","id","useParams","pagesPath","contacts","useSelector","selectContacts","length","find"],"sourceRoot":""}