{"version":3,"file":"static/js/417.c063a1eb.chunk.js","mappings":"mNAEaA,E,QAAcC,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FACxB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,gBAAgB,IAEjC,SAAAC,GAAQ,OAAAA,EAALF,MAAkBG,eAAe,IAClC,SAAAC,GAAQ,OAAAA,EAALJ,MAAkBK,iBAAiB,I,oBCF/CC,EAAmBC,EAAAA,EAAAA,eACnBC,EAAqBC,EAAAA,EAAAA,iBAU7B,EAR2B,WACzB,IAAMC,EAAgBF,IAEdG,EAAgBL,EAAeI,GAA/BC,YAER,OAAOC,EAAAA,EAAAA,KAACjB,EAAW,CAAAkB,SAAEF,GACvB,C,iICNQG,EAAWP,EAAAA,EAAAA,OACXQ,EAAcC,EAAAA,EAAAA,UA8BtB,EA5ByB,SAACC,GACxB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAWC,EAAAA,EAAAA,MAAYV,EAAUW,cACjCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACJT,GACcK,GAASK,EAAAA,EAAAA,IAAcV,IAEpCW,SACAC,MAAK,WACJpB,EAAOqB,aAAa,gCAChBlB,EACFY,EAASZ,GACAO,IAAaF,GACtBO,EAAS,IAADO,OAAKrB,EAAUsB,cAE3B,IACCC,OAAM,WACLxB,EAAOyB,WAAW,4BACpB,GAEN,GAAG,CAACjB,EAAWK,EAAUE,EAAUZ,EAAMO,IAElCD,CACT,E,UC/BQR,EAAcC,EAAAA,EAAAA,UCGtB,EALc,CACZwB,iBAAkBA,EAClBhC,iBDEuB,WACvB,IAAMiC,GAAKhB,EAAAA,EAAAA,MAAYV,EAAUW,cAC3BgB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAIF,EAASG,OACX,OAAOH,EAASI,MAAK,SAAA/C,GAAK,OAAWA,EAAb0C,KAAkCA,CAAE,GAEhE,E","sources":["components/ContactDescription/ContactDescription.styled.js","components/ContactDescription/ContactDescription.jsx","hooks/useDeleteContact.js","hooks/useTargetContact.js","hooks/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Description = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n","import hooks from 'hooks';\nimport { Description } from './ContactDescription.styled';\nimport utils from 'utils';\n\nconst { getContactInfo } = utils;\nconst { useTargetContact } = hooks;\n\nconst ContactDescription = () => {\n  const targetContact = useTargetContact();\n\n  const { description } = getContactInfo(targetContact);\n\n  return <Description>{description}</Description>;\n};\n\nexport default ContactDescription;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport utils from 'utils';\nimport constants from 'constants';\nimport { useEffect, useState } from 'react';\n\nconst { toasts } = utils;\nconst { pagesPath } = constants;\n\nconst useDeleteContact = (path) => {\n  const [contactId, setContactId] = useState(null);\n  const targetId = useParams()[pagesPath.dynamicParam];\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (contactId) {\n      const promise = dispatch(deleteContact(contactId));\n      promise\n        .unwrap()\n        .then(() => {\n          toasts.successToast('Contact successfully removed');\n          if (path) {\n            navigate(path);\n          } else if (targetId === contactId) {\n            navigate(`/${pagesPath.contactsPath}`);\n          }\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path, targetId]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport constants from 'constants';\n\nconst { pagesPath } = constants;\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import useDeleteContact from 'hooks/useDeleteContact';\nimport useTargetContact from 'hooks/useTargetContact';\n\nconst hooks = {\n  useDeleteContact: useDeleteContact,\n  useTargetContact: useTargetContact,\n};\n\nexport default hooks;\n"],"names":["Description","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryFontColor","_ref2","primaryFontSize","_ref3","primaryFontWeight","getContactInfo","utils","useTargetContact","hooks","targetContact","description","_jsx","children","toasts","pagesPath","constants","path","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","targetId","useParams","dynamicParam","dispatch","useDispatch","navigate","useNavigate","useEffect","deleteContact","unwrap","then","successToast","concat","contactsPath","catch","errorToast","useDeleteContact","id","contacts","useSelector","selectContacts","length","find"],"sourceRoot":""}