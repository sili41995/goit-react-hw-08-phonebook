{"version":3,"file":"static/js/640.00f1da70.chunk.js","mappings":"yVAEaA,EAAQC,EAAAA,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHAClB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,gBAAgB,IAG/B,SAAAC,GAAQ,OAAAA,EAALF,MAAkBG,mBAAmB,IAI5CC,EAAOR,EAAAA,EAAAA,KAAWS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sEAGtB,SAAAQ,GAAQ,OAAAA,EAALN,MAAkBO,UAAU,IAG3BC,EAAUZ,EAAAA,EAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0fAExB,SAAAY,GAAQ,OAAuB,GAAvBA,EAALV,MAAkBW,OAAY,IAO3B,SAAAC,GAAQ,OAAAA,EAALZ,MAAkBW,OAAO,IAI9B,SAAAE,GAAQ,OAAAA,EAALb,MAAkBC,gBAAgB,IAEjC,SAAAa,GAAQ,OAAAA,EAALd,MAAkBe,eAAe,IAClC,SAAAC,GAAQ,OAAAA,EAALhB,MAAkBiB,iBAAiB,IAE5B,SAAAC,GAAQ,OAAAA,EAALlB,MAAkBmB,yBAAyB,IAGvD,SAAAC,GAAQ,OAAAA,EAALpB,MAAkBqB,aAAa,I,UCxB9CC,EAAWC,EAAAA,EAAAA,OACXC,EAAgBC,EAAAA,EAAAA,YA4DxB,EA1DuB,WAAO,IAADC,EACrBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MACjBC,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACaC,EAAMH,EAAnBI,UAAaD,OACbE,EAAYL,EAAZK,aACAC,EAAKN,EAALM,MAGIC,GAA2B,QAAdb,GADFc,EAAAA,EAAAA,MACWC,aAAK,IAAAf,OAAA,EAAdA,EAAgBgB,OAAQ,IAc3C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACnD,EAAK,CAAAkD,SAAC,iBACPF,EAAAA,EAAAA,MAACvC,EAAI,CAAC2C,SAAUV,GAfK,SAACW,GACxBlB,GAASmB,EAAAA,EAAAA,IAAWD,IACjBE,SACAC,MAAK,WACJ7B,EAAO8B,aAAa,8BACpBd,GACF,IACCe,OAAM,WACL/B,EAAOgC,WAAW,0BACpB,GACJ,IAKmDT,SAAA,EAC7CC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,UAAQC,EAAAA,EAAAA,GAAA,GAAOvB,EAAS,OAAQ,CAAEwB,UAAU,EAAMC,UAAW,KAC7DC,KAAK,OACLC,YAAY,OACZC,WAAS,IAEV3B,EAAO4B,MAAQzC,EAAOgC,WAAW,qBAClCR,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,UAAQC,EAAAA,EAAAA,GAAA,GAAOvB,EAAS,SAAU,CAAEwB,UAAU,KAC9CE,KAAK,MACLC,YAAY,UAEb1B,EAAO6B,QAAU1C,EAAOgC,WAAW,sBACpCX,EAAAA,EAAAA,MAACnC,EAAO,CAAAqC,SAAA,EACNC,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACTC,SAAUvC,EACVwC,QAAS3C,EAAY4C,OACrBC,MAAO,GACPC,OAAQ,GACRV,KAAK,SAAQf,UAEbC,EAAAA,EAAAA,KAACyB,EAAAA,IAAW,OAEdzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAIlC,EAAWM,SAAC,mBAKhC,C","sources":["components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing * 10}px;\n  align-self: center;\n  & a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding: ${({ theme }) => theme.spacing}px;\n    background: rgba(217, 217, 217, 0.58);\n    border-radius: 8px;\n    border-color: transparent;\n    color: ${({ theme }) => theme.primaryFontColor};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.primaryFontSize}px;\n    font-weight: ${({ theme }) => theme.primaryFontWeight};\n    text-decoration: none;\n    transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n    &:hover,\n    &:focus {\n      box-shadow: ${({ theme }) => theme.primaryShadow};\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport utils from 'utils';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport IconButton from 'components/IconButton';\nimport Input from 'components/Input';\nimport constants from 'constants';\nimport { Buttons, Form, Title } from './AddContactForm.styled';\n\nconst { toasts } = utils;\nconst { iconBtnType } = constants;\n\nconst AddContactForm = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n  const location = useLocation();\n  const goBackLink = location.state?.from || '/';\n\n  const handleFormSubmit = (data) => {\n    dispatch(addContact(data))\n      .unwrap()\n      .then(() => {\n        toasts.successToast('Contact added successfully');\n        reset();\n      })\n      .catch(() => {\n        toasts.errorToast('Adding a contact failed');\n      });\n  };\n\n  return (\n    <>\n      <Title>Add contact</Title>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Input\n          settings={{ ...register('name', { required: true, minLength: 1 }) }}\n          type=\"text\"\n          placeholder=\"Name\"\n          autoFocus\n        />\n        {errors.name && toasts.errorToast('Name is required')}\n        <Input\n          settings={{ ...register('number', { required: true }) }}\n          type=\"tel\"\n          placeholder=\"Phone\"\n        />\n        {errors.number && toasts.errorToast('Phone is required')}\n        <Buttons>\n          <IconButton\n            disabled={isLoading}\n            btnType={iconBtnType.accept}\n            width={44}\n            height={35}\n            type=\"submit\"\n          >\n            <GiCheckMark />\n          </IconButton>\n          <Link to={goBackLink}>Cancel</Link>\n        </Buttons>\n      </Form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryFontColor","_ref2","secondaryFontWeight","Form","_templateObject2","_ref3","primaryGap","Buttons","_templateObject3","_ref4","spacing","_ref5","_ref6","_ref7","primaryFontSize","_ref8","primaryFontWeight","_ref9","transitionDurationAndFunc","_ref10","primaryShadow","toasts","utils","iconBtnType","constants","_location$state","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","reset","goBackLink","useLocation","state","from","_jsxs","_Fragment","children","_jsx","onSubmit","data","addContact","unwrap","then","successToast","catch","errorToast","Input","settings","_objectSpread","required","minLength","type","placeholder","autoFocus","name","number","IconButton","disabled","btnType","accept","width","height","GiCheckMark","Link","to"],"sourceRoot":""}