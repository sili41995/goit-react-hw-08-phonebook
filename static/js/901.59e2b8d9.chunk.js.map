{"version":3,"file":"static/js/901.59e2b8d9.chunk.js","mappings":"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","sources":["components/ContactDetails/ContactDetails.styled.js","components/ContactInfo/ContactInfo.styled.js","components/ContactInfo/ContactInfo.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactDetails/ContactDetails.jsx","components/ContactModalForm/ContactModalForm.styled.js","components/ContactModalForm/ContactModalForm.jsx","constants/defaultValues.js","hooks/useDeleteContact.js","hooks/useTargetContact.js","utils/getAvatar.js","utils/getContactInfo.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  flex-grow: 1;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  justify-content: flex-end;\n  margin-bottom: ${({ theme }) => theme.spacing * 28}px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  width: 112px;\n  margin: 0 auto ${({ theme }) => theme.spacing * 2}px;\n`;\n\nexport const ContactTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing * 2}px;\n`;\n\nexport const ContactName = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.otherFontWeight};\n  text-align: center;\n`;\n\nexport const ContactDesc = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Navigation = styled.nav`\n  padding: ${({ theme }) => theme.spacing}px;\n  border-radius: 10px;\n  background: #eee;\n  margin-top: ${({ theme }) => theme.spacing * 20}px;\n  margin-bottom: ${({ theme }) => theme.spacing * 10}px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ListItem = styled.li`\n  & a {\n    display: block;\n    padding: ${({ theme }) => theme.spacing}px\n      ${({ theme }) => theme.spacing * 5}px;\n    border-radius: 10px;\n    color: #555;\n    font-family: Jua;\n    font-size: ${({ theme }) => theme.primaryFontSize}px;\n    font-weight: ${({ theme }) => theme.otherFontWeight};\n    text-decoration: none;\n    transition: background ${({ theme }) => theme.transitionDurationAndFunc};\n    &.active,\n    &:hover,\n    &:focus {\n      background: #44de6f;\n    }\n  }\n`;\n","import { Suspense } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport useTargetContact from 'hooks/useTargetContact';\nimport getContactInfo from 'utils/getContactInfo';\nimport { getContactAvatar } from 'utils/getAvatar';\nimport Loader from 'components/Loader';\nimport {\n  ContactDesc,\n  ContactName,\n  ContactTitle,\n  Image,\n  ListItem,\n  List,\n  Navigation,\n} from './ContactInfo.styled';\n\nconst ContactInfo = () => {\n  const targetContact = useTargetContact();\n\n  if (!targetContact) {\n    return;\n  }\n\n  const { name, role, avatar } = getContactInfo(targetContact);\n  const userAvatar = getContactAvatar(avatar);\n\n  return (\n    <>\n      <Image src={userAvatar} alt={`${name} photo`} />\n      <ContactTitle>\n        <ContactName>{name}</ContactName>\n        <ContactDesc>{role}</ContactDesc>\n      </ContactTitle>\n      <Navigation>\n        <List>\n          <ListItem>\n            <NavLink to=\"contact\">Contact</NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"about\">About</NavLink>\n          </ListItem>\n        </List>\n      </Navigation>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactInfo;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: ${({ theme }) => theme.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing * 10}px;\n  align-self: center;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 8px;\n  padding: ${({ theme }) => theme.spacing * 2}px\n    ${({ theme }) => theme.spacing * 10}px;\n  font-family: Inter;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  letter-spacing: 0.04em;\n  transition: border-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.primaryColor};\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoX } from 'react-icons/go';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Buttons, Form, Title, Input } from './EditForm.styled';\nimport IconButton from 'components/IconButton';\nimport { errorToast, successToast } from 'utils/toasts';\nimport getContactInfo from 'utils/getContactInfo';\nimport useTargetContact from 'hooks/useTargetContact';\nimport { updateContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport iconBtnType from 'constants/iconBtnType';\nimport pagesPath from 'constants/pagesPath';\n\nconst EditForm = ({ setEditContact }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const id = useParams()[pagesPath.dynamicParam];\n  const targetContact = useTargetContact();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n\n  if (!targetContact) {\n    return;\n  }\n\n  const { name, number } = getContactInfo(targetContact);\n\n  const onSubmit = (data) => {\n    dispatch(updateContact({ data, id }))\n      .unwrap()\n      .then(() => {\n        successToast('Contact updated successfully');\n      })\n      .catch(() => {\n        errorToast('Contact update failed');\n      });\n  };\n\n  return (\n    <>\n      <Title>Contact editing</Title>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          defaultValue={name}\n          {...register('name', { required: true })}\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        {errors.name && errorToast('Name is required')}\n        <Input\n          defaultValue={number}\n          {...register('number', { required: true })}\n          type=\"tel\"\n          placeholder=\"Phone\"\n        />\n        {errors.number && errorToast('Phone is required')}\n        <Buttons>\n          <IconButton\n            disabled={isLoading}\n            btnType={iconBtnType.accept}\n            width={44}\n            height={35}\n            type=\"submit\"\n          >\n            <GiCheckMark />\n          </IconButton>\n          <IconButton\n            btnType={iconBtnType.cancel}\n            width={44}\n            height={35}\n            onBtnClick={setEditContact}\n          >\n            <GoX />\n          </IconButton>\n        </Buttons>\n      </Form>\n    </>\n  );\n};\n\nexport default EditForm;\n","import { useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { CiEdit } from 'react-icons/ci';\nimport { Container, ButtonContainer } from './ContactDetails.styled';\nimport ContactInfo from 'components/ContactInfo';\nimport EditForm from 'components/EditForm';\nimport ContactModalForm from 'components/ContactModalForm';\nimport IconButton from 'components/IconButton';\nimport makeBlur from 'utils/makeBlur';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport iconBtnType from 'constants/iconBtnType';\nimport pagesPath from 'constants/pagesPath';\nimport useDeleteContact from 'hooks/useDeleteContact';\n\nconst ContactDetails = () => {\n  const [editContact, setEditContact] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const id = useParams()[pagesPath.dynamicParam];\n  const { search } = useLocation();\n  const deleteContact = useDeleteContact();\n\n  const setEditState = () => {\n    setEditContact((editContact) => !editContact);\n  };\n\n  const handleEditBtnClick = (e) => {\n    setEditState();\n    makeBlur(e.currentTarget);\n  };\n\n  const handleDeleteBtnClick = (id) => {\n    const path = `/${pagesPath.contactsPath + search}`;\n    deleteContact(id, path);\n  };\n\n  return (\n    <>\n      <Container>\n        <ButtonContainer>\n          {!editContact && (\n            <IconButton\n              disabled={isLoading}\n              btnType={iconBtnType.delete}\n              width={44}\n              height={35}\n              onBtnClick={() => {\n                handleDeleteBtnClick(id);\n              }}\n            >\n              <AiOutlineDelete />\n            </IconButton>\n          )}\n          <IconButton\n            btnType={iconBtnType.edit}\n            width={44}\n            height={35}\n            onBtnClick={handleEditBtnClick}\n          >\n            <CiEdit />\n          </IconButton>\n        </ButtonContainer>\n        {editContact ? (\n          <ContactModalForm>\n            <EditForm setEditContact={setEditState} />\n          </ContactModalForm>\n        ) : (\n          <ContactInfo />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ContactDetails;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { Container } from './ContactModalForm.styled';\n\nconst ContactModalForm = ({ children }) => <Container>{children}</Container>;\n\nexport default ContactModalForm;\n","const defaultValues = {\n  dateOfBirth: '21 century',\n  phoneNumber: 'Is absent',\n  location: '💙💛Ukraine, Nikopol',\n  role: 'my friend',\n  email: 'sili41995@gmail.com',\n  chat: 'sili4_a',\n  description: 'No description',\n};\n\nexport default defaultValues;\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { errorToast, successToast } from 'utils/toasts';\nimport pagesPath from 'constants/pagesPath';\n\nconst useDeleteContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  return (contactId, path) => {\n    dispatch(deleteContact(contactId))\n      .unwrap()\n      .then(() => {\n        successToast('Contact successfully removed');\n        if (path) {\n          navigate(path);\n        }\n        if (id === contactId) {\n          navigate(`/${pagesPath.contactsPath}`);\n        }\n      })\n      .catch(() => {\n        errorToast('Deleting a contact failed');\n      });\n  };\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport pagesPath from 'constants/pagesPath';\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import defaulUserAvatar from 'components/default-user-avatar.jpg';\nimport defaultContactAvatar from 'components/default-contact-avatar.jpg';\n\nexport const getUserAvatar = (avatar) => (avatar ? avatar : defaulUserAvatar);\n\nexport const getContactAvatar = (avatar) =>\n  avatar ? avatar : defaultContactAvatar;\n","import defaultValues from 'constants/defaultValues';\nimport { getContactAvatar } from 'utils/getAvatar';\n\nconst getContactInfo = (contact) => {\n  const {\n    id,\n    name,\n    number,\n    avatar,\n    role = defaultValues.role,\n    email = defaultValues.email,\n    chat = defaultValues.chat,\n    description = defaultValues.description,\n  } = contact;\n  const userAvatar = getContactAvatar(avatar);\n\n  return { userAvatar, name, id, role, number, email, chat, description };\n};\n\nexport default getContactInfo;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ButtonContainer","_templateObject2","_ref","theme","primaryGap","_ref2","spacing","Image","ContactTitle","ContactName","_templateObject3","_ref3","primaryFontColor","_ref4","secondaryFontSize","_ref5","otherFontWeight","ContactDesc","_templateObject4","_ref6","primaryFontSize","_ref7","primaryFontWeight","Navigation","_templateObject5","_ref8","_ref9","_ref10","List","_templateObject6","ListItem","_templateObject7","_ref11","_ref12","_ref13","_ref14","_ref15","transitionDurationAndFunc","targetContact","useTargetContact","_getContactInfo","getContactInfo","name","role","avatar","userAvatar","getContactAvatar","_jsxs","_Fragment","children","_jsx","src","alt","concat","NavLink","to","Suspense","fallback","Loader","Outlet","Title","secondaryFontWeight","Form","Buttons","Input","primaryColor","setEditContact","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","id","useParams","pagesPath","_useForm","useForm","register","errors","formState","handleSubmit","number","onSubmit","data","updateContact","unwrap","then","successToast","catch","errorToast","_objectSpread","defaultValue","required","type","placeholder","IconButton","disabled","btnType","iconBtnType","width","height","GiCheckMark","onBtnClick","GoX","_useState","useState","_useState2","_slicedToArray","editContact","search","useLocation","deleteContact","useDeleteContact","setEditState","path","handleDeleteBtnClick","AiOutlineDelete","e","makeBlur","currentTarget","CiEdit","ContactModalForm","EditForm","ContactInfo","dateOfBirth","phoneNumber","location","email","chat","description","navigate","useNavigate","contactId","contacts","selectContacts","length","find","getUserAvatar","defaulUserAvatar","defaultContactAvatar","contact","_contact$role","defaultValues","_contact$email","_contact$chat","_contact$description"],"sourceRoot":""}