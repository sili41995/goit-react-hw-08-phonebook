{"version":3,"file":"static/js/506.fbd42ccb.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/AuthForm.jsx","components/AuthFormMessage/AuthFormMessage.styled.js","components/AuthFormMessage/AuthFormMessage.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 600px;\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  flex-direction: column;\n  background-color: #fcfcfc;\n  padding: ${({ theme }) => theme.spacing * 10}px;\n  margin: ${({ theme }) => theme.spacing * 10}px auto;\n  border-radius: 30px;\n  box-shadow: ${({ theme }) => theme.secondaryShadow};\n`;\n","import { FormContainer } from './AuthForm.styled';\n\nconst AuthForm = ({ children }) => <FormContainer>{children}</FormContainer>;\n\nexport default AuthForm;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  & a {\n    color: ${({ theme }) => theme.primaryLinkColor};\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Message } from './AuthFormMessage.styled';\n\nexport const AuthFormMessage = ({ message, pageLink, action }) => (\n  <Message>\n    <Link to={pageLink}>{action}</Link> {message}\n  </Message>\n);\n\nexport default AuthFormMessage;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: 35px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  align-self: center;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 170px;\n  padding: ${({ theme }) => theme.spacing * 4}px\n    ${({ theme }) => theme.spacing * 8}px;\n  align-self: center;\n  background-color: ${({ theme }) => theme.primaryLinkColor};\n  border-color: transparent;\n  border-radius: 4px;\n  color: #fff;\n  text-align: center;\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: ${({ theme }) => theme.primaryFontWeight};\n  line-height: 1.5;\n  letter-spacing: 0.64px;\n  transition: background-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.secondaryLinkColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Form, Button, Message, Title, Image } from './LoginForm.styled';\nimport defaultAvatar from '../default-signin-avatar.png';\nimport { errorToast, successToast } from 'utils/toasts';\nimport AuthFormMessage from 'components/AuthFormMessage';\nimport Input from 'components/Input';\nimport { loginUser } from 'redux/auth/operations';\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport pagesPath from 'constants/pagesPath';\nimport formType from 'constants/formType';\n\nconst LoginForm = () => {\n  const [credentials, setCredentials] = useState(null);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setFocus,\n  } = useForm();\n\n  useEffect(() => {\n    setFocus('email');\n  }, [setFocus]);\n\n  useEffect(() => {\n    if (credentials) {\n      const promise = dispatch(loginUser(credentials));\n      promise.unwrap().then(() => {\n        successToast('Hello, my friend!');\n      });\n\n      return () => {\n        promise.abort();\n      };\n    }\n  }, [credentials, dispatch]);\n\n  return (\n    <>\n      <Title>log in</Title>\n      <Message>Welcome to Phonebook!</Message>\n      <Image src={defaultAvatar} alt=\"user avatar\" />\n      <Form onSubmit={handleSubmit(setCredentials)}>\n        <Input\n          settings={{ ...register('email', { required: true }) }}\n          type=\"email\"\n          placeholder=\"Email\"\n          inputType={formType.authForm}\n        />\n        {errors.email && errorToast('Email is required')}\n        <Input\n          settings={{\n            ...register('password', { required: true, minLength: 7 }),\n          }}\n          type=\"password\"\n          placeholder=\"Password\"\n          inputType={formType.authForm}\n        />\n        {errors.password &&\n          errorToast(\n            errors.password.type === 'required'\n              ? 'Password is required'\n              : 'Password minimum length is 7 characters'\n          )}\n        <AuthFormMessage\n          action={'Sign up'}\n          pageLink={`/${pagesPath.registerPath}`}\n          message={\"if you don't have an account yet\"}\n        />\n        <Button disabled={isLoading} type=\"submit\">\n          Log in\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import AuthForm from 'components/AuthForm';\nimport LoginForm from 'components/LoginForm';\n\nconst LoginPage = ({ message }) => (\n  <AuthForm>\n    <LoginForm />\n  </AuthForm>\n);\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryGap","_ref2","spacing","_ref3","_ref4","secondaryShadow","children","_jsx","Message","primaryFontColor","secondaryFontSize","primaryFontWeight","primaryLinkColor","message","pageLink","action","_jsxs","Link","to","Title","_templateObject2","_ref5","Form","_templateObject3","_ref6","Image","_templateObject4","Button","_templateObject5","_ref7","_ref8","_ref9","_ref10","_ref11","transitionDurationAndFunc","_ref12","secondaryLinkColor","_useState","useState","_useState2","_slicedToArray","credentials","setCredentials","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","setFocus","useEffect","promise","loginUser","unwrap","then","successToast","abort","_Fragment","src","defaultAvatar","alt","onSubmit","Input","settings","_objectSpread","required","type","placeholder","inputType","formType","email","errorToast","minLength","password","AuthFormMessage","concat","pagesPath","disabled","AuthForm","LoginForm"],"sourceRoot":""}