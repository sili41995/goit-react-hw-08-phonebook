{"version":3,"file":"static/js/46.c9aab089.chunk.js","mappings":"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","sources":["components/ContactData/ContactData.styled.js","components/ActionLink/ActionLink.styled.js","components/ActionLink/ActionLink.jsx","components/ContactData/ContactData.jsx","hooks/useDeleteContact.js","hooks/useTargetContact.js","hooks/index.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const InfoWrap = styled.div``;\n\nexport const InfoDesc = styled.p`\n  color: #7c7c7c;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const InfoData = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n","import styled from '@emotion/styled';\nimport utils from 'utils';\n\nconst { setButtonColor, setIconFill } = utils;\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 35px;\n  padding: ${({ theme }) => theme.spacing()};\n  background-color: ${setButtonColor};\n  border-radius: 8px;\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n  }\n  & svg {\n    width: 100%;\n    height: 100%;\n    fill: ${setIconFill};\n    stroke: inherit;\n  }\n`;\n","import { Link } from './ActionLink.styled';\nimport utils from 'utils';\n\nconst { makeBlur } = utils;\n\nconst ActionLink = ({ link, children, btnType }) => {\n  const onBtnClick = (e) => {\n    makeBlur(e.currentTarget);\n  };\n\n  return (\n    <Link btnType={btnType} href={link} onClick={onBtnClick}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ActionLink;\n","import { HiOutlinePhone } from 'react-icons/hi';\nimport { IoMdMail } from 'react-icons/io';\nimport { RiChat1Line } from 'react-icons/ri';\nimport {\n  InfoDesc,\n  InfoData,\n  Container,\n  Field,\n  InfoWrap,\n} from './ContactData.styled';\nimport ActionLink from 'components/ActionLink';\nimport utils from 'utils';\nimport hooks from 'hooks';\nimport constants from 'constants';\n\nconst { getContactInfo, getPhoneNumber } = utils;\nconst { iconBtnType } = constants;\nconst { useTargetContact } = hooks;\n\nconst ContactData = () => {\n  const targetContact = useTargetContact();\n\n  const { number, email, chat } = getContactInfo(targetContact);\n  const phoneNumber = getPhoneNumber(number);\n\n  return (\n    <Container>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Phone number</InfoDesc>\n          <InfoData>{number}</InfoData>\n        </InfoWrap>\n        <ActionLink link={`tel:${phoneNumber}`} btnType={iconBtnType.phone}>\n          <HiOutlinePhone />\n        </ActionLink>\n      </Field>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Email Address</InfoDesc>\n          <InfoData>{email}</InfoData>\n        </InfoWrap>\n        <ActionLink link={`mailto:${email}`} btnType={iconBtnType.message}>\n          <IoMdMail />\n        </ActionLink>\n      </Field>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Chat</InfoDesc>\n          <InfoData>{chat}</InfoData>\n        </InfoWrap>\n        <ActionLink\n          link={`tg://resolve?domain=${chat}`}\n          btnType={iconBtnType.chat}\n        >\n          <RiChat1Line />\n        </ActionLink>\n      </Field>\n    </Container>\n  );\n};\n\nexport default ContactData;\n","import { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport utils from 'utils';\nimport constants from 'constants';\nimport { useEffect, useState } from 'react';\n\nconst { toasts } = utils;\nconst { pagesPath } = constants;\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState(null);\n  const currentId = useParams()[pagesPath.dynamicParam];\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${pagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path, currentId]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useParams } from 'react-router-dom';\nimport constants from 'constants';\n\nconst { pagesPath } = constants;\n\nconst useTargetContact = () => {\n  const id = useParams()[pagesPath.dynamicParam];\n  const contacts = useSelector(selectContacts);\n  if (contacts.length) {\n    return contacts.find(({ id: contactId }) => contactId === id);\n  }\n};\n\nexport default useTargetContact;\n","import useDeleteContact from 'hooks/useDeleteContact';\nimport useTargetContact from 'hooks/useTargetContact';\n\nconst hooks = {\n  useDeleteContact: useDeleteContact,\n  useTargetContact: useTargetContact,\n};\n\nexport default hooks;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Field","_templateObject2","InfoWrap","_templateObject3","InfoDesc","_templateObject4","_ref2","fontSize","primaryFontSize","_ref3","fontWeight","primaryFontWeight","InfoData","_templateObject5","_ref4","colors","primaryFontColor","_ref5","_ref6","setButtonColor","utils","setIconFill","Link","transitionDurationAndFunc","shadows","primaryShadow","makeBlur","link","children","btnType","_jsx","href","onClick","e","currentTarget","getContactInfo","getPhoneNumber","iconBtnType","constants","useTargetContact","hooks","targetContact","_getContactInfo","number","email","chat","phoneNumber","_jsxs","ActionLink","concat","phone","HiOutlinePhone","message","IoMdMail","RiChat1Line","toasts","pagesPath","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","currentId","useParams","dynamicParam","dispatch","useDispatch","navigate","useNavigate","search","useLocation","path","contactsPath","useEffect","deleteContact","unwrap","then","successToast","catch","errorToast","useDeleteContact","id","contacts","useSelector","selectContacts","length","find"],"sourceRoot":""}