{"version":3,"file":"static/js/605.09200b6c.chunk.js","mappings":"gPAkBA,EAbqB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QAChBC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MAGjB,OAFwBN,IAAeG,GAGrCI,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAE,IAAAC,OAAMC,EAAAA,EAAAA,WAAuBC,MAAO,CAAEC,KAAMR,KAExDN,CAEJ,C","sources":["components/PrivateRoute/PrivateRoute.jsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport pagesPath from 'constants/pagesPath';\nimport { selectIsLoggedIn, selectIsRefreshing } from 'redux/auth/selectors';\n\nconst PrivateRoute = ({ element }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const location = useLocation();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n\n  return shouldRedirect ? (\n    <Navigate to={`/${pagesPath.loginPath}`} state={{ from: location }} />\n  ) : (\n    element\n  );\n};\n\nexport default PrivateRoute;\n"],"names":["_ref","element","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","location","useLocation","_jsx","Navigate","to","concat","pagesPath","state","from"],"sourceRoot":""}